{"ast":null,"code":"import { ref, computed, onMounted, watch } from 'vue';\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n    const isLoading = ref(false);\n    const packageCache = ref(new Map());\n    const debouncedSearchQuery = ref('');\n    const displayLimit = ref(10); // Default number of packages to display\n\n    // Debounce search input to prevent excessive filtering\n    let searchTimeout = null;\n    watch(searchQuery, newValue => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout);\n      }\n      searchTimeout = setTimeout(() => {\n        debouncedSearchQuery.value = newValue;\n      }, 300);\n    });\n\n    // Generate deterministic data based on component properties\n    const generatePackageData = component => {\n      // Create a simple hash from the component name for deterministic values\n      const nameHash = component.name.split('').reduce((acc, char) => {\n        return acc + char.charCodeAt(0);\n      }, 0);\n\n      // Use the hash to generate deterministic values\n      const downloads = nameHash * 1000 % 10000000;\n      const stars = nameHash * 100 % 50000;\n      const issues = nameHash * 10 % 50;\n      const maintenanceScore = nameHash * 5 % 100;\n\n      // Generate a deterministic date within the last year\n      const today = new Date();\n      const daysAgo = nameHash % 365 + 1;\n      const lastUpdated = new Date(today);\n      lastUpdated.setDate(lastUpdated.getDate() - daysAgo);\n      return {\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(downloads),\n        stars: Math.floor(stars),\n        issues: Math.floor(issues),\n        lastUpdated: lastUpdated.toISOString().split('T')[0],\n        maintenanceScore: Math.floor(maintenanceScore)\n      };\n    };\n\n    // Use memoization to avoid recalculating package data\n    const getPackageData = component => {\n      const cacheKey = `${component.name}-${component.version}`;\n      if (!packageCache.value.has(cacheKey)) {\n        packageCache.value.set(cacheKey, generatePackageData(component));\n      }\n      return packageCache.value.get(cacheKey);\n    };\n\n    // Optimized computed property with memoization\n    const packages = computed(() => {\n      if (!props.sbomData || !props.sbomData.components) {\n        return [];\n      }\n      return props.sbomData.components.map(component => getPackageData(component));\n    });\n\n    // Total number of packages\n    const totalPackages = computed(() => packages.value.length);\n\n    // Optimized filtering and sorting with memoization\n    const filteredPackages = computed(() => {\n      const query = debouncedSearchQuery.value.toLowerCase();\n      const metric = selectedMetric.value;\n\n      // Filter packages based on search query\n      const filtered = query ? packages.value.filter(pkg => pkg.name.toLowerCase().includes(query)) : packages.value;\n\n      // Sort packages based on selected metric\n      return [...filtered].sort((a, b) => {\n        switch (metric) {\n          case 'downloads':\n            return b.downloads - a.downloads;\n          case 'stars':\n            return b.stars - a.stars;\n          case 'issues':\n            return a.issues - b.issues;\n          // Lower is better for issues\n          case 'maintenance':\n            return b.maintenanceScore - a.maintenanceScore;\n          default:\n            return 0;\n        }\n      });\n    });\n\n    // Displayed packages with limit applied\n    const displayedPackages = computed(() => {\n      // Ensure displayLimit is a valid number\n      const limit = Math.max(5, Math.min(filteredPackages.value.length, displayLimit.value));\n      return filteredPackages.value.slice(0, limit);\n    });\n\n    // Functions to increase/decrease the display limit\n    function increaseRange() {\n      displayLimit.value = Math.min(filteredPackages.value.length, displayLimit.value + 5);\n    }\n    function decreaseRange() {\n      displayLimit.value = Math.max(5, displayLimit.value - 5);\n    }\n\n    // Optimized number formatter with memoization\n    const numberFormatCache = new Map();\n    const formatNumber = num => {\n      // Check cache first\n      if (numberFormatCache.has(num)) {\n        return numberFormatCache.get(num);\n      }\n      let result;\n      if (num >= 1000000) {\n        result = (num / 1000000).toFixed(1) + 'M';\n      } else if (num >= 1000) {\n        result = (num / 1000).toFixed(1) + 'K';\n      } else {\n        result = num.toString();\n      }\n\n      // Cache the result\n      numberFormatCache.set(num, result);\n      return result;\n    };\n\n    // Optimized date formatter with memoization\n    const dateFormatCache = new Map();\n    const formatDate = dateString => {\n      // Check cache first\n      if (dateFormatCache.has(dateString)) {\n        return dateFormatCache.get(dateString);\n      }\n      const date = new Date(dateString);\n      const result = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n\n      // Cache the result\n      dateFormatCache.set(dateString, result);\n      return result;\n    };\n\n    // Optimized class getter with memoization\n    const maintenanceClassCache = new Map();\n    const getMaintenanceClass = score => {\n      // Check cache first\n      if (maintenanceClassCache.has(score)) {\n        return maintenanceClassCache.get(score);\n      }\n      let result;\n      if (score >= 90) result = 'excellent';else if (score >= 75) result = 'good';else if (score >= 60) result = 'fair';else result = 'poor';\n\n      // Cache the result\n      maintenanceClassCache.set(score, result);\n      return result;\n    };\n\n    // Simulate loading state for better UX\n    onMounted(() => {\n      isLoading.value = true;\n      setTimeout(() => {\n        isLoading.value = false;\n      }, 500);\n    });\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      displayedPackages,\n      totalPackages,\n      displayLimit,\n      increaseRange,\n      decreaseRange,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass,\n      isLoading\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","name","props","sbomData","type","Object","required","setup","searchQuery","selectedMetric","isLoading","packageCache","Map","debouncedSearchQuery","displayLimit","searchTimeout","newValue","clearTimeout","setTimeout","value","generatePackageData","component","nameHash","split","reduce","acc","char","charCodeAt","downloads","stars","issues","maintenanceScore","today","Date","daysAgo","lastUpdated","setDate","getDate","version","Math","floor","toISOString","getPackageData","cacheKey","has","set","get","packages","components","map","totalPackages","length","filteredPackages","query","toLowerCase","metric","filtered","filter","pkg","includes","sort","a","b","displayedPackages","limit","max","min","slice","increaseRange","decreaseRange","numberFormatCache","formatNumber","num","result","toFixed","toString","dateFormatCache","formatDate","dateString","date","toLocaleDateString","year","month","day","maintenanceClassCache","getMaintenanceClass","score"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/components/PackageMetrics.vue"],"sourcesContent":["<template>\n  <div class=\"package-metrics\">\n    <div class=\"metrics-header\">\n      <div class=\"metrics-title\">\n        <h3>Package Metrics</h3>\n        <span class=\"package-count\" v-if=\"!isLoading\">{{ displayedPackages.length }} / {{ totalPackages }} packages</span>\n      </div>\n      <div class=\"metrics-filters\">\n        <div class=\"filter-group\">\n          <input\n            type=\"text\"\n            v-model=\"searchQuery\"\n            placeholder=\"Search packages...\"\n            class=\"modern-input\"\n          />\n          <select v-model=\"selectedMetric\" class=\"modern-input\">\n            <option value=\"downloads\">Downloads</option>\n            <option value=\"stars\">GitHub Stars</option>\n            <option value=\"issues\">Open Issues</option>\n            <option value=\"maintenance\">Maintenance Score</option>\n          </select>\n        </div>\n        <div class=\"range-selector\">\n          <label for=\"packageRange\">Show:</label>\n          <div class=\"range-inputs\">\n            <input\n              type=\"number\"\n              id=\"packageRange\"\n              v-model.number=\"displayLimit\"\n              min=\"5\"\n              :max=\"filteredPackages.length\"\n              class=\"modern-input range-input\"\n            />\n            <div class=\"range-controls\">\n              <button @click=\"increaseRange\" class=\"range-button\">+</button>\n              <button @click=\"decreaseRange\" class=\"range-button\">-</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"loading-state\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading package metrics...</p>\n    </div>\n\n    <!-- Empty state when no packages match the filter -->\n    <div v-else-if=\"filteredPackages.length === 0\" class=\"empty-state\">\n      <div class=\"empty-icon\">ðŸ“¦</div>\n      <p v-if=\"searchQuery\">No packages match your search criteria.</p>\n      <p v-else>No package data available.</p>\n    </div>\n\n    <!-- Package metrics grid -->\n    <div v-else class=\"metrics-grid\">\n      <div v-for=\"pkg in filteredPackages\" :key=\"pkg.name\" class=\"metric-card\">\n        <div class=\"metric-header\">\n          <h4>{{ pkg.name }}</h4>\n          <span class=\"metric-badge\" :class=\"getMaintenanceClass(pkg.maintenanceScore)\">\n            {{ pkg.maintenanceScore }}%\n          </span>\n        </div>\n\n        <div class=\"metric-details\">\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Downloads</span>\n            <span class=\"metric-value\">{{ formatNumber(pkg.downloads) }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Stars</span>\n            <span class=\"metric-value\">{{ formatNumber(pkg.stars) }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Open Issues</span>\n            <span class=\"metric-value\">{{ pkg.issues }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Last Updated</span>\n            <span class=\"metric-value\">{{ formatDate(pkg.lastUpdated) }}</span>\n          </div>\n        </div>\n\n        <div class=\"metric-progress\">\n          <div class=\"progress-bar\">\n            <div\n              class=\"progress-fill\"\n              :style=\"{ width: `${pkg.maintenanceScore}%` }\"\n              :class=\"getMaintenanceClass(pkg.maintenanceScore)\"\n            ></div>\n          </div>\n          <span class=\"progress-label\">Maintenance Score</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\n\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n    const isLoading = ref(false);\n    const packageCache = ref(new Map());\n    const debouncedSearchQuery = ref('');\n    const displayLimit = ref(10); // Default number of packages to display\n\n    // Debounce search input to prevent excessive filtering\n    let searchTimeout = null;\n\n    watch(searchQuery, (newValue) => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout);\n      }\n\n      searchTimeout = setTimeout(() => {\n        debouncedSearchQuery.value = newValue;\n      }, 300);\n    });\n\n    // Generate deterministic data based on component properties\n    const generatePackageData = (component) => {\n      // Create a simple hash from the component name for deterministic values\n      const nameHash = component.name.split('').reduce((acc, char) => {\n        return acc + char.charCodeAt(0);\n      }, 0);\n\n      // Use the hash to generate deterministic values\n      const downloads = (nameHash * 1000) % 10000000;\n      const stars = (nameHash * 100) % 50000;\n      const issues = (nameHash * 10) % 50;\n      const maintenanceScore = (nameHash * 5) % 100;\n\n      // Generate a deterministic date within the last year\n      const today = new Date();\n      const daysAgo = (nameHash % 365) + 1;\n      const lastUpdated = new Date(today);\n      lastUpdated.setDate(lastUpdated.getDate() - daysAgo);\n\n      return {\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(downloads),\n        stars: Math.floor(stars),\n        issues: Math.floor(issues),\n        lastUpdated: lastUpdated.toISOString().split('T')[0],\n        maintenanceScore: Math.floor(maintenanceScore)\n      };\n    };\n\n    // Use memoization to avoid recalculating package data\n    const getPackageData = (component) => {\n      const cacheKey = `${component.name}-${component.version}`;\n\n      if (!packageCache.value.has(cacheKey)) {\n        packageCache.value.set(cacheKey, generatePackageData(component));\n      }\n\n      return packageCache.value.get(cacheKey);\n    };\n\n    // Optimized computed property with memoization\n    const packages = computed(() => {\n      if (!props.sbomData || !props.sbomData.components) {\n        return [];\n      }\n\n      return props.sbomData.components.map(component => getPackageData(component));\n    });\n\n    // Total number of packages\n    const totalPackages = computed(() => packages.value.length);\n\n    // Optimized filtering and sorting with memoization\n    const filteredPackages = computed(() => {\n      const query = debouncedSearchQuery.value.toLowerCase();\n      const metric = selectedMetric.value;\n\n      // Filter packages based on search query\n      const filtered = query\n        ? packages.value.filter(pkg => pkg.name.toLowerCase().includes(query))\n        : packages.value;\n\n      // Sort packages based on selected metric\n      return [...filtered].sort((a, b) => {\n        switch (metric) {\n          case 'downloads':\n            return b.downloads - a.downloads;\n          case 'stars':\n            return b.stars - a.stars;\n          case 'issues':\n            return a.issues - b.issues; // Lower is better for issues\n          case 'maintenance':\n            return b.maintenanceScore - a.maintenanceScore;\n          default:\n            return 0;\n        }\n      });\n    });\n\n    // Displayed packages with limit applied\n    const displayedPackages = computed(() => {\n      // Ensure displayLimit is a valid number\n      const limit = Math.max(5, Math.min(filteredPackages.value.length, displayLimit.value));\n      return filteredPackages.value.slice(0, limit);\n    });\n\n    // Functions to increase/decrease the display limit\n    function increaseRange() {\n      displayLimit.value = Math.min(filteredPackages.value.length, displayLimit.value + 5);\n    }\n\n    function decreaseRange() {\n      displayLimit.value = Math.max(5, displayLimit.value - 5);\n    }\n\n    // Optimized number formatter with memoization\n    const numberFormatCache = new Map();\n\n    const formatNumber = (num) => {\n      // Check cache first\n      if (numberFormatCache.has(num)) {\n        return numberFormatCache.get(num);\n      }\n\n      let result;\n      if (num >= 1000000) {\n        result = (num / 1000000).toFixed(1) + 'M';\n      } else if (num >= 1000) {\n        result = (num / 1000).toFixed(1) + 'K';\n      } else {\n        result = num.toString();\n      }\n\n      // Cache the result\n      numberFormatCache.set(num, result);\n      return result;\n    };\n\n    // Optimized date formatter with memoization\n    const dateFormatCache = new Map();\n\n    const formatDate = (dateString) => {\n      // Check cache first\n      if (dateFormatCache.has(dateString)) {\n        return dateFormatCache.get(dateString);\n      }\n\n      const date = new Date(dateString);\n      const result = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n\n      // Cache the result\n      dateFormatCache.set(dateString, result);\n      return result;\n    };\n\n    // Optimized class getter with memoization\n    const maintenanceClassCache = new Map();\n\n    const getMaintenanceClass = (score) => {\n      // Check cache first\n      if (maintenanceClassCache.has(score)) {\n        return maintenanceClassCache.get(score);\n      }\n\n      let result;\n      if (score >= 90) result = 'excellent';\n      else if (score >= 75) result = 'good';\n      else if (score >= 60) result = 'fair';\n      else result = 'poor';\n\n      // Cache the result\n      maintenanceClassCache.set(score, result);\n      return result;\n    };\n\n    // Simulate loading state for better UX\n    onMounted(() => {\n      isLoading.value = true;\n      setTimeout(() => {\n        isLoading.value = false;\n      }, 500);\n    });\n\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      displayedPackages,\n      totalPackages,\n      displayLimit,\n      increaseRange,\n      decreaseRange,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass,\n      isLoading\n    };\n  }\n};\n</script>\n\n<style scoped>\n.package-metrics {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: var(--card-shadow);\n}\n\n.metrics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.metrics-header h3 {\n  font-size: var(--font-size-xl);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metrics-filters {\n  display: flex;\n  gap: 1rem;\n}\n\n.metrics-filters input {\n  width: 200px;\n}\n\n.metrics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n.metric-card {\n  background: var(--light-color);\n  border-radius: 8px;\n  padding: 1.5rem;\n  transition: transform 0.2s ease;\n}\n\n.metric-card:hover {\n  transform: translateY(-2px);\n}\n\n.metric-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.metric-header h4 {\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metric-badge {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-weight-medium);\n}\n\n.metric-badge.excellent {\n  background: rgba(16, 185, 129, 0.1);\n  color: rgb(16, 185, 129);\n}\n\n.metric-badge.good {\n  background: rgba(37, 99, 235, 0.1);\n  color: rgb(37, 99, 235);\n}\n\n.metric-badge.fair {\n  background: rgba(245, 158, 11, 0.1);\n  color: rgb(245, 158, 11);\n}\n\n.metric-badge.poor {\n  background: rgba(220, 38, 38, 0.1);\n  color: rgb(220, 38, 38);\n}\n\n.metric-details {\n  margin-bottom: 1.5rem;\n}\n\n.metric-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.metric-label {\n  color: var(--secondary-color);\n  font-size: var(--font-size-sm);\n}\n\n.metric-value {\n  font-weight: var(--font-weight-medium);\n  color: var(--dark-color);\n}\n\n.metric-progress {\n  margin-top: 1rem;\n}\n\n.progress-bar {\n  height: 6px;\n  background: var(--light-color);\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.progress-fill.excellent {\n  background: rgb(16, 185, 129);\n}\n\n.progress-fill.good {\n  background: rgb(37, 99, 235);\n}\n\n.progress-fill.fair {\n  background: rgb(245, 158, 11);\n}\n\n.progress-fill.poor {\n  background: rgb(220, 38, 38);\n}\n\n.progress-label {\n  font-size: var(--font-size-xs);\n  color: var(--secondary-color);\n}\n\n/* Loading state styles */\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  text-align: center;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(13, 148, 136, 0.2);\n  border-radius: 50%;\n  border-top-color: var(--primary-color);\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Empty state styles */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}