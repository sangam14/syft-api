{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nconst app = createApp(App);\n\n// Global error handler - avoid using variables that might be undefined\napp.config.errorHandler = (err, instance, info) => {\n  console.error('Global error:', err);\n  console.error('Error info:', info);\n  // Log error to console only, let components handle UI error display\n};\n\n// Handle uncaught promise rejections\nwindow.addEventListener('unhandledrejection', event => {\n  console.error('Unhandled promise rejection:', event.reason);\n});\napp.mount('#app');","map":{"version":3,"names":["createApp","App","app","config","errorHandler","err","instance","info","console","error","window","addEventListener","event","reason","mount"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\n// Global error handler - avoid using variables that might be undefined\napp.config.errorHandler = (err, instance, info) => {\n  console.error('Global error:', err)\n  console.error('Error info:', info)\n  // Log error to console only, let components handle UI error display\n}\n\n// Handle uncaught promise rejections\nwindow.addEventListener('unhandledrejection', event => {\n  console.error('Unhandled promise rejection:', event.reason)\n})\n\napp.mount('#app')"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAE3B,MAAMC,GAAG,GAAGF,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACAC,GAAG,CAACC,MAAM,CAACC,YAAY,GAAG,CAACC,GAAG,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACjDC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEJ,GAAG,CAAC;EACnCG,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEF,IAAI,CAAC;EAClC;AACF,CAAC;;AAED;AACAG,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAEC,KAAK,IAAI;EACrDJ,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEG,KAAK,CAACC,MAAM,CAAC;AAC7D,CAAC,CAAC;AAEFX,GAAG,CAACY,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}