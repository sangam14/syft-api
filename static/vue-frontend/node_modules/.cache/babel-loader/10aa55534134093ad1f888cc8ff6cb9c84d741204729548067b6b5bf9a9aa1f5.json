{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"package-metrics\"\n};\nconst _hoisted_2 = {\n  class: \"metrics-header\"\n};\nconst _hoisted_3 = {\n  class: \"metrics-filters\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-state\"\n};\nconst _hoisted_5 = {\n  class: \"empty-state\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"metrics-grid\"\n};\nconst _hoisted_9 = {\n  class: \"metric-header\"\n};\nconst _hoisted_10 = {\n  class: \"metric-details\"\n};\nconst _hoisted_11 = {\n  class: \"metric-row\"\n};\nconst _hoisted_12 = {\n  class: \"metric-value\"\n};\nconst _hoisted_13 = {\n  class: \"metric-row\"\n};\nconst _hoisted_14 = {\n  class: \"metric-value\"\n};\nconst _hoisted_15 = {\n  class: \"metric-row\"\n};\nconst _hoisted_16 = {\n  class: \"metric-value\"\n};\nconst _hoisted_17 = {\n  class: \"metric-row\"\n};\nconst _hoisted_18 = {\n  class: \"metric-value\"\n};\nconst _hoisted_19 = {\n  class: \"metric-progress\"\n};\nconst _hoisted_20 = {\n  class: \"progress-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Package Metrics\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    placeholder: \"Search packages...\",\n    class: \"modern-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedMetric = $event),\n    class: \"modern-input\"\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"option\", {\n    value: \"downloads\"\n  }, \"Downloads\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"stars\"\n  }, \"GitHub Stars\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"issues\"\n  }, \"Open Issues\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"maintenance\"\n  }, \"Maintenance Score\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selectedMetric]])])]), _createCommentVNode(\" Loading state \"), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading package metrics...\", -1 /* HOISTED */)]))) : $setup.filteredPackages.length === 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Empty state when no packages match the filter \"), _createElementVNode(\"div\", _hoisted_5, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"empty-icon\"\n  }, \"ðŸ“¦\", -1 /* HOISTED */)), $setup.searchQuery ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"No packages match your search criteria.\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"No package data available.\"))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Package metrics grid \"), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredPackages, pkg => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pkg.name,\n      class: \"metric-card\"\n    }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h4\", null, _toDisplayString(pkg.name), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"metric-badge\", $setup.getMaintenanceClass(pkg.maintenanceScore)])\n    }, _toDisplayString(pkg.maintenanceScore) + \"% \", 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n      class: \"metric-label\"\n    }, \"Downloads\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.formatNumber(pkg.downloads)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", {\n      class: \"metric-label\"\n    }, \"Stars\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($setup.formatNumber(pkg.stars)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n      class: \"metric-label\"\n    }, \"Open Issues\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_16, _toDisplayString(pkg.issues), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", {\n      class: \"metric-label\"\n    }, \"Last Updated\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_18, _toDisplayString($setup.formatDate(pkg.lastUpdated)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"progress-fill\", $setup.getMaintenanceClass(pkg.maintenanceScore)]),\n      style: _normalizeStyle({\n        width: `${pkg.maintenanceScore}%`\n      })\n    }, null, 6 /* CLASS, STYLE */)]), _cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n      class: \"progress-label\"\n    }, \"Maintenance Score\", -1 /* HOISTED */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","type","_cache","$event","$setup","searchQuery","placeholder","selectedMetric","value","_createCommentVNode","isLoading","_hoisted_4","filteredPackages","length","_Fragment","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_renderList","pkg","name","_hoisted_9","_toDisplayString","_normalizeClass","getMaintenanceClass","maintenanceScore","_hoisted_10","_hoisted_11","_hoisted_12","formatNumber","downloads","_hoisted_13","_hoisted_14","stars","_hoisted_15","_hoisted_16","issues","_hoisted_17","_hoisted_18","formatDate","lastUpdated","_hoisted_19","_hoisted_20","style","_normalizeStyle","width"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/components/PackageMetrics.vue"],"sourcesContent":["<template>\n  <div class=\"package-metrics\">\n    <div class=\"metrics-header\">\n      <h3>Package Metrics</h3>\n      <div class=\"metrics-filters\">\n        <input\n          type=\"text\"\n          v-model=\"searchQuery\"\n          placeholder=\"Search packages...\"\n          class=\"modern-input\"\n        />\n        <select v-model=\"selectedMetric\" class=\"modern-input\">\n          <option value=\"downloads\">Downloads</option>\n          <option value=\"stars\">GitHub Stars</option>\n          <option value=\"issues\">Open Issues</option>\n          <option value=\"maintenance\">Maintenance Score</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"loading-state\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading package metrics...</p>\n    </div>\n\n    <!-- Empty state when no packages match the filter -->\n    <div v-else-if=\"filteredPackages.length === 0\" class=\"empty-state\">\n      <div class=\"empty-icon\">ðŸ“¦</div>\n      <p v-if=\"searchQuery\">No packages match your search criteria.</p>\n      <p v-else>No package data available.</p>\n    </div>\n\n    <!-- Package metrics grid -->\n    <div v-else class=\"metrics-grid\">\n      <div v-for=\"pkg in filteredPackages\" :key=\"pkg.name\" class=\"metric-card\">\n        <div class=\"metric-header\">\n          <h4>{{ pkg.name }}</h4>\n          <span class=\"metric-badge\" :class=\"getMaintenanceClass(pkg.maintenanceScore)\">\n            {{ pkg.maintenanceScore }}%\n          </span>\n        </div>\n\n        <div class=\"metric-details\">\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Downloads</span>\n            <span class=\"metric-value\">{{ formatNumber(pkg.downloads) }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Stars</span>\n            <span class=\"metric-value\">{{ formatNumber(pkg.stars) }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Open Issues</span>\n            <span class=\"metric-value\">{{ pkg.issues }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Last Updated</span>\n            <span class=\"metric-value\">{{ formatDate(pkg.lastUpdated) }}</span>\n          </div>\n        </div>\n\n        <div class=\"metric-progress\">\n          <div class=\"progress-bar\">\n            <div\n              class=\"progress-fill\"\n              :style=\"{ width: `${pkg.maintenanceScore}%` }\"\n              :class=\"getMaintenanceClass(pkg.maintenanceScore)\"\n            ></div>\n          </div>\n          <span class=\"progress-label\">Maintenance Score</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\n\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n    const isLoading = ref(false);\n    const packageCache = ref(new Map());\n    const debouncedSearchQuery = ref('');\n\n    // Debounce search input to prevent excessive filtering\n    let searchTimeout = null;\n\n    watch(searchQuery, (newValue) => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout);\n      }\n\n      searchTimeout = setTimeout(() => {\n        debouncedSearchQuery.value = newValue;\n      }, 300);\n    });\n\n    // Generate deterministic data based on component properties\n    const generatePackageData = (component) => {\n      // Create a simple hash from the component name for deterministic values\n      const nameHash = component.name.split('').reduce((acc, char) => {\n        return acc + char.charCodeAt(0);\n      }, 0);\n\n      // Use the hash to generate deterministic values\n      const downloads = (nameHash * 1000) % 10000000;\n      const stars = (nameHash * 100) % 50000;\n      const issues = (nameHash * 10) % 50;\n      const maintenanceScore = (nameHash * 5) % 100;\n\n      // Generate a deterministic date within the last year\n      const today = new Date();\n      const daysAgo = (nameHash % 365) + 1;\n      const lastUpdated = new Date(today);\n      lastUpdated.setDate(lastUpdated.getDate() - daysAgo);\n\n      return {\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(downloads),\n        stars: Math.floor(stars),\n        issues: Math.floor(issues),\n        lastUpdated: lastUpdated.toISOString().split('T')[0],\n        maintenanceScore: Math.floor(maintenanceScore)\n      };\n    };\n\n    // Use memoization to avoid recalculating package data\n    const getPackageData = (component) => {\n      const cacheKey = `${component.name}-${component.version}`;\n\n      if (!packageCache.value.has(cacheKey)) {\n        packageCache.value.set(cacheKey, generatePackageData(component));\n      }\n\n      return packageCache.value.get(cacheKey);\n    };\n\n    // Optimized computed property with memoization\n    const packages = computed(() => {\n      if (!props.sbomData || !props.sbomData.components) {\n        return [];\n      }\n\n      return props.sbomData.components.map(component => getPackageData(component));\n    });\n\n    // Optimized filtering and sorting with memoization\n    const filteredPackages = computed(() => {\n      const query = debouncedSearchQuery.value.toLowerCase();\n      const metric = selectedMetric.value;\n\n      // Filter packages based on search query\n      const filtered = query\n        ? packages.value.filter(pkg => pkg.name.toLowerCase().includes(query))\n        : packages.value;\n\n      // Sort packages based on selected metric\n      return [...filtered].sort((a, b) => {\n        switch (metric) {\n          case 'downloads':\n            return b.downloads - a.downloads;\n          case 'stars':\n            return b.stars - a.stars;\n          case 'issues':\n            return a.issues - b.issues; // Lower is better for issues\n          case 'maintenance':\n            return b.maintenanceScore - a.maintenanceScore;\n          default:\n            return 0;\n        }\n      });\n    });\n\n    // Optimized number formatter with memoization\n    const numberFormatCache = new Map();\n\n    const formatNumber = (num) => {\n      // Check cache first\n      if (numberFormatCache.has(num)) {\n        return numberFormatCache.get(num);\n      }\n\n      let result;\n      if (num >= 1000000) {\n        result = (num / 1000000).toFixed(1) + 'M';\n      } else if (num >= 1000) {\n        result = (num / 1000).toFixed(1) + 'K';\n      } else {\n        result = num.toString();\n      }\n\n      // Cache the result\n      numberFormatCache.set(num, result);\n      return result;\n    };\n\n    // Optimized date formatter with memoization\n    const dateFormatCache = new Map();\n\n    const formatDate = (dateString) => {\n      // Check cache first\n      if (dateFormatCache.has(dateString)) {\n        return dateFormatCache.get(dateString);\n      }\n\n      const date = new Date(dateString);\n      const result = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n\n      // Cache the result\n      dateFormatCache.set(dateString, result);\n      return result;\n    };\n\n    // Optimized class getter with memoization\n    const maintenanceClassCache = new Map();\n\n    const getMaintenanceClass = (score) => {\n      // Check cache first\n      if (maintenanceClassCache.has(score)) {\n        return maintenanceClassCache.get(score);\n      }\n\n      let result;\n      if (score >= 90) result = 'excellent';\n      else if (score >= 75) result = 'good';\n      else if (score >= 60) result = 'fair';\n      else result = 'poor';\n\n      // Cache the result\n      maintenanceClassCache.set(score, result);\n      return result;\n    };\n\n    // Simulate loading state for better UX\n    onMounted(() => {\n      isLoading.value = true;\n      setTimeout(() => {\n        isLoading.value = false;\n      }, 500);\n    });\n\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass,\n      isLoading\n    };\n  }\n};\n</script>\n\n<style scoped>\n.package-metrics {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: var(--card-shadow);\n}\n\n.metrics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.metrics-header h3 {\n  font-size: var(--font-size-xl);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metrics-filters {\n  display: flex;\n  gap: 1rem;\n}\n\n.metrics-filters input {\n  width: 200px;\n}\n\n.metrics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n.metric-card {\n  background: var(--light-color);\n  border-radius: 8px;\n  padding: 1.5rem;\n  transition: transform 0.2s ease;\n}\n\n.metric-card:hover {\n  transform: translateY(-2px);\n}\n\n.metric-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.metric-header h4 {\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metric-badge {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-weight-medium);\n}\n\n.metric-badge.excellent {\n  background: rgba(16, 185, 129, 0.1);\n  color: rgb(16, 185, 129);\n}\n\n.metric-badge.good {\n  background: rgba(37, 99, 235, 0.1);\n  color: rgb(37, 99, 235);\n}\n\n.metric-badge.fair {\n  background: rgba(245, 158, 11, 0.1);\n  color: rgb(245, 158, 11);\n}\n\n.metric-badge.poor {\n  background: rgba(220, 38, 38, 0.1);\n  color: rgb(220, 38, 38);\n}\n\n.metric-details {\n  margin-bottom: 1.5rem;\n}\n\n.metric-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.metric-label {\n  color: var(--secondary-color);\n  font-size: var(--font-size-sm);\n}\n\n.metric-value {\n  font-weight: var(--font-weight-medium);\n  color: var(--dark-color);\n}\n\n.metric-progress {\n  margin-top: 1rem;\n}\n\n.progress-bar {\n  height: 6px;\n  background: var(--light-color);\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.progress-fill.excellent {\n  background: rgb(16, 185, 129);\n}\n\n.progress-fill.good {\n  background: rgb(37, 99, 235);\n}\n\n.progress-fill.fair {\n  background: rgb(245, 158, 11);\n}\n\n.progress-fill.poor {\n  background: rgb(220, 38, 38);\n}\n\n.progress-label {\n  font-size: var(--font-size-xs);\n  color: var(--secondary-color);\n}\n\n/* Loading state styles */\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  text-align: center;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(13, 148, 136, 0.2);\n  border-radius: 50%;\n  border-top-color: var(--primary-color);\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Empty state styles */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}