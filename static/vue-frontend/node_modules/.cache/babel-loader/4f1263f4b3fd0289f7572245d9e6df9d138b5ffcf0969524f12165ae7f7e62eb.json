{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dependency-graph\"\n};\nconst _hoisted_2 = {\n  class: \"graph-header\"\n};\nconst _hoisted_3 = {\n  class: \"graph-filters\"\n};\nconst _hoisted_4 = {\n  class: \"graph-container\",\n  ref: \"graphContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Dependency Graph\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedDepth = $event),\n    class: \"modern-input\"\n  }, _cache[1] || (_cache[1] = [_createElementVNode(\"option\", {\n    value: \"1\"\n  }, \"Depth 1\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"2\"\n  }, \"Depth 2\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"3\"\n  }, \"Depth 3\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"All Dependencies\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selectedDepth]])])]), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), _cache[3] || (_cache[3] = _createStaticVNode(\"<div class=\\\"graph-legend\\\" data-v-c168f57a><div class=\\\"legend-item\\\" data-v-c168f57a><div class=\\\"legend-color package\\\" data-v-c168f57a></div><span data-v-c168f57a>Package</span></div><div class=\\\"legend-item\\\" data-v-c168f57a><div class=\\\"legend-color dependency\\\" data-v-c168f57a></div><span data-v-c168f57a>Dependency</span></div><div class=\\\"legend-item\\\" data-v-c168f57a><div class=\\\"legend-color vulnerability\\\" data-v-c168f57a></div><span data-v-c168f57a>Vulnerable</span></div></div>\", 1))]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","$event","$setup","selectedDepth","value","_hoisted_4","_createStaticVNode"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/components/DependencyGraph.vue"],"sourcesContent":["<template>\n  <div class=\"dependency-graph\">\n    <div class=\"graph-header\">\n      <h3>Dependency Graph</h3>\n      <div class=\"graph-filters\">\n        <select v-model=\"selectedDepth\" class=\"modern-input\">\n          <option value=\"1\">Depth 1</option>\n          <option value=\"2\">Depth 2</option>\n          <option value=\"3\">Depth 3</option>\n          <option value=\"all\">All Dependencies</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"graph-container\" ref=\"graphContainer\"></div>\n    <div class=\"graph-legend\">\n      <div class=\"legend-item\">\n        <div class=\"legend-color package\"></div>\n        <span>Package</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color dependency\"></div>\n        <span>Dependency</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color vulnerability\"></div>\n        <span>Vulnerable</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from 'vue';\n\nexport default {\n  name: 'DependencyGraph',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const graphContainer = ref(null);\n    const network = ref(null);\n    const selectedDepth = ref('2');\n\n    const graphData = computed(() => {\n      if (!props.sbomData || !props.sbomData.components) {\n        return { nodes: [], edges: [] };\n      }\n\n      const nodes = [];\n      const edges = [];\n      const components = props.sbomData.components || [];\n      const maxDepth = selectedDepth.value === 'all' ? Infinity : parseInt(selectedDepth.value);\n\n      // Apply depth filtering\n      const includedComponents = components.filter((_, index) => {\n        // In a real implementation, you would determine the depth of each component\n        // and filter based on maxDepth. For now, we'll include all components.\n        return index < 10 * maxDepth; // Just for demonstration\n      });\n\n      // Create nodes\n      includedComponents.forEach((component, index) => {\n        nodes.push({\n          id: index,\n          label: component.name || `Component ${index}`,\n          title: component.version ? `${component.name} v${component.version}` : component.name,\n          group: component.type || 'default'\n        });\n      });\n\n      // Create edges based on dependencies\n      includedComponents.forEach((component, index) => {\n        if (component.dependencies) {\n          component.dependencies.forEach(dep => {\n            const depIndex = components.findIndex(c => c.name === dep.name);\n            if (depIndex !== -1 && depIndex < includedComponents.length) {\n              edges.push({\n                from: index,\n                to: depIndex,\n                arrows: 'to'\n              });\n            }\n          });\n        }\n      });\n\n      return { nodes, edges };\n    });\n\n    const createGraph = () => {\n      if (!graphContainer.value) return;\n      \n      if (!window.vis) {\n        console.error('vis-network not loaded');\n        return;\n      }\n\n      const options = {\n        nodes: {\n          shape: 'dot',\n          size: 16,\n          font: {\n            size: 12,\n            color: '#000000'\n          },\n          borderWidth: 2\n        },\n        edges: {\n          width: 2,\n          smooth: {\n            type: 'continuous'\n          }\n        },\n        physics: {\n          stabilization: false,\n          barnesHut: {\n            gravitationalConstant: -80000,\n            springConstant: 0.001,\n            springLength: 200\n          }\n        },\n        layout: {\n          improvedLayout: true\n        }\n      };\n\n      if (network.value) {\n        network.value.destroy();\n      }\n\n      network.value = new window.vis.Network(\n        graphContainer.value,\n        graphData.value,\n        options\n      );\n    };\n\n    // Load vis-network from CDN\n    const loadVisNetwork = () => {\n      return new Promise((resolve) => {\n        if (window.vis) {\n          resolve();\n          return;\n        }\n\n        const script = document.createElement('script');\n        script.src = 'https://unpkg.com/vis-network/standalone/umd/vis-network.min.js';\n        script.onload = () => resolve();\n        document.head.appendChild(script);\n      });\n    };\n\n    watch([selectedDepth, graphData], () => {\n      if (window.vis) {\n        createGraph();\n      }\n    });\n\n    onMounted(async () => {\n      await loadVisNetwork();\n      createGraph();\n    });\n\n    return {\n      graphContainer,\n      selectedDepth\n    };\n  }\n};\n</script>\n\n<style scoped>\n.dependency-graph {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: var(--card-shadow);\n}\n\n.graph-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.graph-header h3 {\n  font-size: var(--font-size-xl);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.graph-filters {\n  display: flex;\n  gap: 1rem;\n}\n\n.graph-container {\n  height: 400px;\n  border: 1px solid var(--border-color);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.graph-legend {\n  display: flex;\n  gap: 2rem;\n  margin-top: 1.5rem;\n  padding-top: 1.5rem;\n  border-top: 1px solid var(--border-color);\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.legend-color {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n}\n\n.legend-color.package {\n  background-color: var(--primary-color);\n}\n\n.legend-color.dependency {\n  background-color: var(--secondary-color);\n}\n\n.legend-color.vulnerability {\n  background-color: var(--danger-color);\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAe;;EASvBA,KAAK,EAAC,iBAAiB;EAACC,GAAG,EAAC;;;uBAZnCC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,mBAAA,CAUM,OAVNC,UAUM,G,0BATJD,mBAAA,CAAyB,YAArB,kBAAgB,sBACpBA,mBAAA,CAOM,OAPNE,UAOM,G,gBANJF,mBAAA,CAKS;IAVjB,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKyBC,MAAA,CAAAC,aAAa,GAAAF,MAAA;IAAER,KAAK,EAAC;gCACpCI,mBAAA,CAAkC;IAA1BO,KAAK,EAAC;EAAG,GAAC,SAAO,qBACzBP,mBAAA,CAAkC;IAA1BO,KAAK,EAAC;EAAG,GAAC,SAAO,qBACzBP,mBAAA,CAAkC;IAA1BO,KAAK,EAAC;EAAG,GAAC,SAAO,qBACzBP,mBAAA,CAA6C;IAArCO,KAAK,EAAC;EAAK,GAAC,kBAAgB,oB,2CAJrBF,MAAA,CAAAC,aAAa,E,OAQlCN,mBAAA,CAAwD,OAAxDQ,UAAwD,+B,0BAb5DC,kBAAA,uf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}