{"ast":null,"code":"import { ref, computed, onMounted, watch } from 'vue';\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n    const isLoading = ref(false);\n    const packageCache = ref(new Map());\n    const debouncedSearchQuery = ref('');\n    const displayLimit = ref(10); // Default number of packages to display\n\n    // Debounce search input to prevent excessive filtering\n    let searchTimeout = null;\n    watch(searchQuery, newValue => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout);\n      }\n      searchTimeout = setTimeout(() => {\n        debouncedSearchQuery.value = newValue;\n      }, 300);\n    });\n\n    // Watch for changes in filtered packages to adjust display limit\n    watch(filteredPackages, newPackages => {\n      // Ensure newPackages is an array\n      if (!newPackages || !Array.isArray(newPackages)) {\n        displayLimit.value = 10; // Reset to default\n        return;\n      }\n\n      // If current display limit is greater than available packages, adjust it\n      if (displayLimit.value > newPackages.length) {\n        displayLimit.value = Math.max(5, newPackages.length);\n      }\n\n      // If we have no packages, reset to default\n      if (newPackages.length === 0) {\n        displayLimit.value = 10; // Reset to default for next time\n      }\n    });\n\n    // Generate deterministic data based on component properties\n    const generatePackageData = component => {\n      // Create a simple hash from the component name for deterministic values\n      const nameHash = component.name.split('').reduce((acc, char) => {\n        return acc + char.charCodeAt(0);\n      }, 0);\n\n      // Use the hash to generate deterministic values\n      const downloads = nameHash * 1000 % 10000000;\n      const stars = nameHash * 100 % 50000;\n      const issues = nameHash * 10 % 50;\n      const maintenanceScore = nameHash * 5 % 100;\n\n      // Generate a deterministic date within the last year\n      const today = new Date();\n      const daysAgo = nameHash % 365 + 1;\n      const lastUpdated = new Date(today);\n      lastUpdated.setDate(lastUpdated.getDate() - daysAgo);\n      return {\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(downloads),\n        stars: Math.floor(stars),\n        issues: Math.floor(issues),\n        lastUpdated: lastUpdated.toISOString().split('T')[0],\n        maintenanceScore: Math.floor(maintenanceScore)\n      };\n    };\n\n    // Use memoization to avoid recalculating package data\n    const getPackageData = component => {\n      const cacheKey = `${component.name}-${component.version}`;\n      if (!packageCache.value.has(cacheKey)) {\n        packageCache.value.set(cacheKey, generatePackageData(component));\n      }\n      return packageCache.value.get(cacheKey);\n    };\n\n    // Optimized computed property with memoization\n    const packages = computed(() => {\n      try {\n        // Check if sbomData exists and has components array\n        if (!props.sbomData) {\n          console.log('No sbomData provided to PackageMetrics');\n          return [];\n        }\n\n        // Handle case where sbomData might be a string\n        let componentsArray = [];\n        if (typeof props.sbomData === 'string') {\n          try {\n            const parsed = JSON.parse(props.sbomData);\n            componentsArray = parsed.components || [];\n          } catch (parseError) {\n            console.error('Error parsing sbomData string:', parseError);\n            return [];\n          }\n        } else if (props.sbomData.components && Array.isArray(props.sbomData.components)) {\n          componentsArray = props.sbomData.components;\n        } else {\n          console.log('sbomData does not contain a valid components array');\n          return [];\n        }\n\n        // Map components to package data\n        return componentsArray.map(component => {\n          // Ensure component has required properties\n          if (!component || !component.name) {\n            return {\n              name: 'Unknown',\n              version: 'Unknown',\n              downloads: 0,\n              stars: 0,\n              issues: 0,\n              lastUpdated: new Date().toISOString().split('T')[0],\n              maintenanceScore: 0\n            };\n          }\n          return getPackageData(component);\n        });\n      } catch (error) {\n        console.error('Error in packages computed property:', error);\n        return [];\n      }\n    });\n\n    // Total number of packages\n    const totalPackages = computed(() => packages.value ? packages.value.length : 0);\n\n    // Optimized filtering and sorting with memoization\n    const filteredPackages = computed(() => {\n      // Ensure packages exists\n      if (!packages.value || !Array.isArray(packages.value)) {\n        return [];\n      }\n      const query = debouncedSearchQuery.value?.toLowerCase() || '';\n      const metric = selectedMetric.value || 'downloads';\n\n      // Filter packages based on search query\n      const filtered = query ? packages.value.filter(pkg => pkg.name.toLowerCase().includes(query)) : packages.value;\n\n      // Sort packages based on selected metric\n      return [...filtered].sort((a, b) => {\n        if (!a || !b) return 0;\n        switch (metric) {\n          case 'downloads':\n            return (b.downloads || 0) - (a.downloads || 0);\n          case 'stars':\n            return (b.stars || 0) - (a.stars || 0);\n          case 'issues':\n            return (a.issues || 0) - (b.issues || 0);\n          // Lower is better for issues\n          case 'maintenance':\n            return (b.maintenanceScore || 0) - (a.maintenanceScore || 0);\n          default:\n            return 0;\n        }\n      });\n    });\n\n    // Calculate average metrics for summary\n    const averageDownloads = computed(() => {\n      if (!filteredPackages.value || filteredPackages.value.length === 0) return 0;\n      const sum = filteredPackages.value.reduce((acc, pkg) => acc + (pkg?.downloads || 0), 0);\n      return Math.round(sum / filteredPackages.value.length);\n    });\n    const averageStars = computed(() => {\n      if (!filteredPackages.value || filteredPackages.value.length === 0) return 0;\n      const sum = filteredPackages.value.reduce((acc, pkg) => acc + (pkg?.stars || 0), 0);\n      return Math.round(sum / filteredPackages.value.length);\n    });\n    const averageMaintenance = computed(() => {\n      if (!filteredPackages.value || filteredPackages.value.length === 0) return 0;\n      const sum = filteredPackages.value.reduce((acc, pkg) => acc + (pkg?.maintenanceScore || 0), 0);\n      return Math.round(sum / filteredPackages.value.length);\n    });\n\n    // Watch for changes in display limit to validate it\n    watch(displayLimit, () => {\n      validateDisplayLimit();\n    });\n\n    // Displayed packages with limit applied\n    const displayedPackages = computed(() => {\n      // Ensure filteredPackages exists and has a length property\n      if (!filteredPackages.value || filteredPackages.value.length === 0) {\n        return [];\n      }\n\n      // Ensure displayLimit is a valid number\n      const numLimit = Number(displayLimit.value);\n      const validLimit = isNaN(numLimit) ? 5 : numLimit;\n      const limit = Math.max(5, Math.min(filteredPackages.value.length, validLimit));\n\n      // If the limit needs correction, we'll handle it in the next tick via the watcher\n      // This avoids modifying state in computed properties\n\n      return filteredPackages.value.slice(0, limit);\n    });\n\n    // Functions to increase/decrease the display limit\n    function increaseRange() {\n      const maxPackages = filteredPackages.value && Array.isArray(filteredPackages.value) ? filteredPackages.value.length : 0;\n      displayLimit.value = Math.min(maxPackages, (Number(displayLimit.value) || 5) + 5);\n    }\n    function decreaseRange() {\n      displayLimit.value = Math.max(5, (Number(displayLimit.value) || 10) - 5);\n    }\n\n    // Validate and correct the display limit if needed\n    function validateDisplayLimit() {\n      // Convert to number in case it's a string from the input\n      const numValue = Number(displayLimit.value);\n\n      // Handle NaN or invalid values\n      if (isNaN(numValue) || numValue < 5) {\n        displayLimit.value = 5;\n        return;\n      }\n\n      // Cap at the maximum available packages\n      const maxPackages = filteredPackages.value && Array.isArray(filteredPackages.value) ? filteredPackages.value.length : 0;\n      if (numValue > maxPackages && maxPackages > 0) {\n        displayLimit.value = maxPackages;\n        return;\n      }\n\n      // Ensure it's an integer\n      displayLimit.value = Math.floor(numValue);\n    }\n\n    // Optimized number formatter with memoization\n    const numberFormatCache = new Map();\n    const formatNumber = num => {\n      // Check cache first\n      if (numberFormatCache.has(num)) {\n        return numberFormatCache.get(num);\n      }\n      let result;\n      if (num >= 1000000) {\n        result = (num / 1000000).toFixed(1) + 'M';\n      } else if (num >= 1000) {\n        result = (num / 1000).toFixed(1) + 'K';\n      } else {\n        result = num.toString();\n      }\n\n      // Cache the result\n      numberFormatCache.set(num, result);\n      return result;\n    };\n\n    // Optimized date formatter with memoization\n    const dateFormatCache = new Map();\n    const formatDate = dateString => {\n      // Check cache first\n      if (dateFormatCache.has(dateString)) {\n        return dateFormatCache.get(dateString);\n      }\n      const date = new Date(dateString);\n      const result = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n\n      // Cache the result\n      dateFormatCache.set(dateString, result);\n      return result;\n    };\n\n    // Optimized class getter with memoization\n    const maintenanceClassCache = new Map();\n    const getMaintenanceClass = score => {\n      // Check cache first\n      if (maintenanceClassCache.has(score)) {\n        return maintenanceClassCache.get(score);\n      }\n      let result;\n      if (score >= 90) result = 'excellent';else if (score >= 75) result = 'good';else if (score >= 60) result = 'fair';else result = 'poor';\n\n      // Cache the result\n      maintenanceClassCache.set(score, result);\n      return result;\n    };\n\n    // Simulate loading state for better UX\n    onMounted(() => {\n      isLoading.value = true;\n      setTimeout(() => {\n        isLoading.value = false;\n      }, 500);\n    });\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      displayedPackages,\n      totalPackages,\n      displayLimit,\n      increaseRange,\n      decreaseRange,\n      validateDisplayLimit,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass,\n      isLoading,\n      averageDownloads,\n      averageStars,\n      averageMaintenance\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","name","props","sbomData","type","Object","required","setup","searchQuery","selectedMetric","isLoading","packageCache","Map","debouncedSearchQuery","displayLimit","searchTimeout","newValue","clearTimeout","setTimeout","value","filteredPackages","newPackages","Array","isArray","length","Math","max","generatePackageData","component","nameHash","split","reduce","acc","char","charCodeAt","downloads","stars","issues","maintenanceScore","today","Date","daysAgo","lastUpdated","setDate","getDate","version","floor","toISOString","getPackageData","cacheKey","has","set","get","packages","console","log","componentsArray","parsed","JSON","parse","components","parseError","error","map","totalPackages","query","toLowerCase","metric","filtered","filter","pkg","includes","sort","a","b","averageDownloads","sum","round","averageStars","averageMaintenance","validateDisplayLimit","displayedPackages","numLimit","Number","validLimit","isNaN","limit","min","slice","increaseRange","maxPackages","decreaseRange","numValue","numberFormatCache","formatNumber","num","result","toFixed","toString","dateFormatCache","formatDate","dateString","date","toLocaleDateString","year","month","day","maintenanceClassCache","getMaintenanceClass","score"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/components/PackageMetrics.vue"],"sourcesContent":["<template>\n  <div class=\"package-metrics\">\n    <div class=\"metrics-header\">\n      <div class=\"metrics-title\">\n        <h3>Package Metrics</h3>\n        <span class=\"package-count\" v-if=\"!isLoading && displayedPackages\">{{ displayedPackages.length || 0 }} / {{ totalPackages || 0 }} packages</span>\n      </div>\n      <div class=\"metrics-filters\">\n        <div class=\"filter-group\">\n          <input\n            type=\"text\"\n            v-model=\"searchQuery\"\n            placeholder=\"Search packages...\"\n            class=\"modern-input\"\n          />\n          <select v-model=\"selectedMetric\" class=\"modern-input\">\n            <option value=\"downloads\">Downloads</option>\n            <option value=\"stars\">GitHub Stars</option>\n            <option value=\"issues\">Open Issues</option>\n            <option value=\"maintenance\">Maintenance Score</option>\n          </select>\n        </div>\n        <div class=\"range-selector\">\n          <label for=\"packageRange\">Show:</label>\n          <div class=\"range-inputs\">\n            <input\n              type=\"number\"\n              id=\"packageRange\"\n              v-model.number=\"displayLimit\"\n              min=\"5\"\n              :max=\"filteredPackages.length\"\n              @change=\"validateDisplayLimit\"\n              class=\"modern-input range-input\"\n            />\n            <div class=\"range-controls\">\n              <button\n                @click=\"increaseRange\"\n                class=\"range-button\"\n                :disabled=\"displayLimit >= filteredPackages.length\"\n                title=\"Show more packages\"\n              >+</button>\n              <button\n                @click=\"decreaseRange\"\n                class=\"range-button\"\n                :disabled=\"displayLimit <= 5\"\n                title=\"Show fewer packages\"\n              >-</button>\n            </div>\n          </div>\n          <span class=\"range-info\" v-if=\"filteredPackages.length > 0\">\n            of {{ filteredPackages.length }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"loading-state\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading package metrics...</p>\n    </div>\n\n    <!-- Empty state when no packages match the filter -->\n    <div v-else-if=\"filteredPackages.length === 0\" class=\"empty-state\">\n      <div class=\"empty-icon\">📦</div>\n      <p v-if=\"searchQuery\">No packages match your search criteria \"{{ searchQuery }}\".</p>\n      <p v-else>No package data available.</p>\n      <button\n        v-if=\"searchQuery && packages.length > 0\"\n        @click=\"searchQuery = ''\"\n        class=\"reset-button\"\n      >\n        Clear Search\n      </button>\n    </div>\n\n    <!-- Package summary section -->\n    <div v-else-if=\"filteredPackages.length > 0\" class=\"metrics-content\">\n      <div class=\"package-summary\" v-if=\"filteredPackages.length > 1\">\n        <div class=\"summary-item\">\n          <div class=\"summary-label\">Total Packages</div>\n          <div class=\"summary-value\">{{ filteredPackages.length }}</div>\n        </div>\n        <div class=\"summary-item\">\n          <div class=\"summary-label\">Avg. Downloads</div>\n          <div class=\"summary-value\">{{ formatNumber(averageDownloads) }}</div>\n        </div>\n        <div class=\"summary-item\">\n          <div class=\"summary-label\">Avg. Stars</div>\n          <div class=\"summary-value\">{{ formatNumber(averageStars) }}</div>\n        </div>\n        <div class=\"summary-item\">\n          <div class=\"summary-label\">Avg. Maintenance</div>\n          <div class=\"summary-value\" :class=\"getMaintenanceClass(averageMaintenance)\">{{ averageMaintenance }}%</div>\n        </div>\n      </div>\n\n      <!-- Package metrics grid -->\n      <div class=\"metrics-grid\">\n        <div v-for=\"pkg in displayedPackages\" :key=\"pkg.name\" class=\"metric-card\">\n          <div class=\"metric-header\">\n            <h4>{{ pkg.name }}</h4>\n            <span class=\"metric-badge\" :class=\"getMaintenanceClass(pkg.maintenanceScore)\">\n              {{ pkg.maintenanceScore }}%\n            </span>\n          </div>\n\n          <div class=\"metric-details\">\n            <div class=\"metric-row\">\n              <span class=\"metric-label\">Downloads</span>\n              <span class=\"metric-value\">{{ formatNumber(pkg.downloads) }}</span>\n            </div>\n            <div class=\"metric-row\">\n              <span class=\"metric-label\">Stars</span>\n              <span class=\"metric-value\">{{ formatNumber(pkg.stars) }}</span>\n            </div>\n            <div class=\"metric-row\">\n              <span class=\"metric-label\">Open Issues</span>\n              <span class=\"metric-value\">{{ pkg.issues }}</span>\n            </div>\n            <div class=\"metric-row\">\n              <span class=\"metric-label\">Last Updated</span>\n              <span class=\"metric-value\">{{ formatDate(pkg.lastUpdated) }}</span>\n            </div>\n          </div>\n\n          <div class=\"metric-progress\">\n            <div class=\"progress-bar\">\n              <div\n                class=\"progress-fill\"\n                :style=\"{ width: `${pkg.maintenanceScore}%` }\"\n                :class=\"getMaintenanceClass(pkg.maintenanceScore)\"\n              ></div>\n            </div>\n            <span class=\"progress-label\">Maintenance Score</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\n\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n    const isLoading = ref(false);\n    const packageCache = ref(new Map());\n    const debouncedSearchQuery = ref('');\n    const displayLimit = ref(10); // Default number of packages to display\n\n    // Debounce search input to prevent excessive filtering\n    let searchTimeout = null;\n\n    watch(searchQuery, (newValue) => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout);\n      }\n\n      searchTimeout = setTimeout(() => {\n        debouncedSearchQuery.value = newValue;\n      }, 300);\n    });\n\n    // Watch for changes in filtered packages to adjust display limit\n    watch(filteredPackages, (newPackages) => {\n      // Ensure newPackages is an array\n      if (!newPackages || !Array.isArray(newPackages)) {\n        displayLimit.value = 10; // Reset to default\n        return;\n      }\n\n      // If current display limit is greater than available packages, adjust it\n      if (displayLimit.value > newPackages.length) {\n        displayLimit.value = Math.max(5, newPackages.length);\n      }\n\n      // If we have no packages, reset to default\n      if (newPackages.length === 0) {\n        displayLimit.value = 10; // Reset to default for next time\n      }\n    });\n\n    // Generate deterministic data based on component properties\n    const generatePackageData = (component) => {\n      // Create a simple hash from the component name for deterministic values\n      const nameHash = component.name.split('').reduce((acc, char) => {\n        return acc + char.charCodeAt(0);\n      }, 0);\n\n      // Use the hash to generate deterministic values\n      const downloads = (nameHash * 1000) % 10000000;\n      const stars = (nameHash * 100) % 50000;\n      const issues = (nameHash * 10) % 50;\n      const maintenanceScore = (nameHash * 5) % 100;\n\n      // Generate a deterministic date within the last year\n      const today = new Date();\n      const daysAgo = (nameHash % 365) + 1;\n      const lastUpdated = new Date(today);\n      lastUpdated.setDate(lastUpdated.getDate() - daysAgo);\n\n      return {\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(downloads),\n        stars: Math.floor(stars),\n        issues: Math.floor(issues),\n        lastUpdated: lastUpdated.toISOString().split('T')[0],\n        maintenanceScore: Math.floor(maintenanceScore)\n      };\n    };\n\n    // Use memoization to avoid recalculating package data\n    const getPackageData = (component) => {\n      const cacheKey = `${component.name}-${component.version}`;\n\n      if (!packageCache.value.has(cacheKey)) {\n        packageCache.value.set(cacheKey, generatePackageData(component));\n      }\n\n      return packageCache.value.get(cacheKey);\n    };\n\n    // Optimized computed property with memoization\n    const packages = computed(() => {\n      try {\n        // Check if sbomData exists and has components array\n        if (!props.sbomData) {\n          console.log('No sbomData provided to PackageMetrics');\n          return [];\n        }\n\n        // Handle case where sbomData might be a string\n        let componentsArray = [];\n\n        if (typeof props.sbomData === 'string') {\n          try {\n            const parsed = JSON.parse(props.sbomData);\n            componentsArray = parsed.components || [];\n          } catch (parseError) {\n            console.error('Error parsing sbomData string:', parseError);\n            return [];\n          }\n        } else if (props.sbomData.components && Array.isArray(props.sbomData.components)) {\n          componentsArray = props.sbomData.components;\n        } else {\n          console.log('sbomData does not contain a valid components array');\n          return [];\n        }\n\n        // Map components to package data\n        return componentsArray.map(component => {\n          // Ensure component has required properties\n          if (!component || !component.name) {\n            return {\n              name: 'Unknown',\n              version: 'Unknown',\n              downloads: 0,\n              stars: 0,\n              issues: 0,\n              lastUpdated: new Date().toISOString().split('T')[0],\n              maintenanceScore: 0\n            };\n          }\n          return getPackageData(component);\n        });\n      } catch (error) {\n        console.error('Error in packages computed property:', error);\n        return [];\n      }\n    });\n\n    // Total number of packages\n    const totalPackages = computed(() => packages.value ? packages.value.length : 0);\n\n    // Optimized filtering and sorting with memoization\n    const filteredPackages = computed(() => {\n      // Ensure packages exists\n      if (!packages.value || !Array.isArray(packages.value)) {\n        return [];\n      }\n\n      const query = debouncedSearchQuery.value?.toLowerCase() || '';\n      const metric = selectedMetric.value || 'downloads';\n\n      // Filter packages based on search query\n      const filtered = query\n        ? packages.value.filter(pkg => pkg.name.toLowerCase().includes(query))\n        : packages.value;\n\n      // Sort packages based on selected metric\n      return [...filtered].sort((a, b) => {\n        if (!a || !b) return 0;\n\n        switch (metric) {\n          case 'downloads':\n            return (b.downloads || 0) - (a.downloads || 0);\n          case 'stars':\n            return (b.stars || 0) - (a.stars || 0);\n          case 'issues':\n            return (a.issues || 0) - (b.issues || 0); // Lower is better for issues\n          case 'maintenance':\n            return (b.maintenanceScore || 0) - (a.maintenanceScore || 0);\n          default:\n            return 0;\n        }\n      });\n    });\n\n    // Calculate average metrics for summary\n    const averageDownloads = computed(() => {\n      if (!filteredPackages.value || filteredPackages.value.length === 0) return 0;\n      const sum = filteredPackages.value.reduce((acc, pkg) => acc + (pkg?.downloads || 0), 0);\n      return Math.round(sum / filteredPackages.value.length);\n    });\n\n    const averageStars = computed(() => {\n      if (!filteredPackages.value || filteredPackages.value.length === 0) return 0;\n      const sum = filteredPackages.value.reduce((acc, pkg) => acc + (pkg?.stars || 0), 0);\n      return Math.round(sum / filteredPackages.value.length);\n    });\n\n    const averageMaintenance = computed(() => {\n      if (!filteredPackages.value || filteredPackages.value.length === 0) return 0;\n      const sum = filteredPackages.value.reduce((acc, pkg) => acc + (pkg?.maintenanceScore || 0), 0);\n      return Math.round(sum / filteredPackages.value.length);\n    });\n\n    // Watch for changes in display limit to validate it\n    watch(displayLimit, () => {\n      validateDisplayLimit();\n    });\n\n    // Displayed packages with limit applied\n    const displayedPackages = computed(() => {\n      // Ensure filteredPackages exists and has a length property\n      if (!filteredPackages.value || filteredPackages.value.length === 0) {\n        return [];\n      }\n\n      // Ensure displayLimit is a valid number\n      const numLimit = Number(displayLimit.value);\n      const validLimit = isNaN(numLimit) ? 5 : numLimit;\n      const limit = Math.max(5, Math.min(filteredPackages.value.length, validLimit));\n\n      // If the limit needs correction, we'll handle it in the next tick via the watcher\n      // This avoids modifying state in computed properties\n\n      return filteredPackages.value.slice(0, limit);\n    });\n\n    // Functions to increase/decrease the display limit\n    function increaseRange() {\n      const maxPackages = filteredPackages.value && Array.isArray(filteredPackages.value)\n        ? filteredPackages.value.length\n        : 0;\n      displayLimit.value = Math.min(maxPackages, (Number(displayLimit.value) || 5) + 5);\n    }\n\n    function decreaseRange() {\n      displayLimit.value = Math.max(5, (Number(displayLimit.value) || 10) - 5);\n    }\n\n    // Validate and correct the display limit if needed\n    function validateDisplayLimit() {\n      // Convert to number in case it's a string from the input\n      const numValue = Number(displayLimit.value);\n\n      // Handle NaN or invalid values\n      if (isNaN(numValue) || numValue < 5) {\n        displayLimit.value = 5;\n        return;\n      }\n\n      // Cap at the maximum available packages\n      const maxPackages = filteredPackages.value && Array.isArray(filteredPackages.value)\n        ? filteredPackages.value.length\n        : 0;\n\n      if (numValue > maxPackages && maxPackages > 0) {\n        displayLimit.value = maxPackages;\n        return;\n      }\n\n      // Ensure it's an integer\n      displayLimit.value = Math.floor(numValue);\n    }\n\n    // Optimized number formatter with memoization\n    const numberFormatCache = new Map();\n\n    const formatNumber = (num) => {\n      // Check cache first\n      if (numberFormatCache.has(num)) {\n        return numberFormatCache.get(num);\n      }\n\n      let result;\n      if (num >= 1000000) {\n        result = (num / 1000000).toFixed(1) + 'M';\n      } else if (num >= 1000) {\n        result = (num / 1000).toFixed(1) + 'K';\n      } else {\n        result = num.toString();\n      }\n\n      // Cache the result\n      numberFormatCache.set(num, result);\n      return result;\n    };\n\n    // Optimized date formatter with memoization\n    const dateFormatCache = new Map();\n\n    const formatDate = (dateString) => {\n      // Check cache first\n      if (dateFormatCache.has(dateString)) {\n        return dateFormatCache.get(dateString);\n      }\n\n      const date = new Date(dateString);\n      const result = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n\n      // Cache the result\n      dateFormatCache.set(dateString, result);\n      return result;\n    };\n\n    // Optimized class getter with memoization\n    const maintenanceClassCache = new Map();\n\n    const getMaintenanceClass = (score) => {\n      // Check cache first\n      if (maintenanceClassCache.has(score)) {\n        return maintenanceClassCache.get(score);\n      }\n\n      let result;\n      if (score >= 90) result = 'excellent';\n      else if (score >= 75) result = 'good';\n      else if (score >= 60) result = 'fair';\n      else result = 'poor';\n\n      // Cache the result\n      maintenanceClassCache.set(score, result);\n      return result;\n    };\n\n    // Simulate loading state for better UX\n    onMounted(() => {\n      isLoading.value = true;\n      setTimeout(() => {\n        isLoading.value = false;\n      }, 500);\n    });\n\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      displayedPackages,\n      totalPackages,\n      displayLimit,\n      increaseRange,\n      decreaseRange,\n      validateDisplayLimit,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass,\n      isLoading,\n      averageDownloads,\n      averageStars,\n      averageMaintenance\n    };\n  }\n};\n</script>\n\n<style scoped>\n.package-metrics {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: var(--card-shadow);\n}\n\n.metrics-header {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 2rem;\n}\n\n.metrics-title {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.metrics-header h3 {\n  font-size: var(--font-size-xl);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n  margin-right: 1rem;\n  margin-bottom: 0;\n}\n\n.package-count {\n  font-size: var(--font-size-sm);\n  color: var(--secondary-color);\n  background-color: var(--light-color);\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n}\n\n.metrics-filters {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.filter-group {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.metrics-filters input {\n  width: 200px;\n}\n\n.range-selector {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  position: relative;\n}\n\n.range-selector label {\n  font-size: var(--font-size-sm);\n  color: var(--secondary-color);\n  white-space: nowrap;\n}\n\n.range-inputs {\n  display: flex;\n  align-items: center;\n}\n\n.range-input {\n  width: 70px;\n  text-align: center;\n  padding-right: 0.5rem;\n}\n\n.range-info {\n  font-size: var(--font-size-sm);\n  color: var(--secondary-color);\n  white-space: nowrap;\n  margin-left: 0.25rem;\n}\n\n.range-controls {\n  display: flex;\n  flex-direction: column;\n  margin-left: 0.5rem;\n}\n\n.range-button {\n  background-color: var(--light-color);\n  border: 1px solid var(--border-color);\n  color: var(--dark-color);\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  padding: 0;\n  font-size: var(--font-size-sm);\n  transition: all 0.2s ease;\n}\n\n.range-button:first-child {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom: none;\n}\n\n.range-button:last-child {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n\n.range-button:hover:not(:disabled) {\n  background-color: var(--primary-color);\n  color: white;\n  border-color: var(--primary-color);\n}\n\n.range-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .metrics-filters {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .filter-group {\n    width: 100%;\n    margin-bottom: 1rem;\n  }\n\n  .filter-group input,\n  .filter-group select {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  .range-selector {\n    width: 100%;\n    justify-content: flex-start;\n  }\n\n  .metrics-title {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .metrics-header h3 {\n    margin-bottom: 0.5rem;\n  }\n\n  .package-count {\n    margin-left: 0;\n  }\n\n  .metrics-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n.metrics-content {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.package-summary {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  padding: 1.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.summary-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n}\n\n.summary-label {\n  font-size: var(--font-size-sm);\n  color: var(--secondary-color);\n  margin-bottom: 0.5rem;\n}\n\n.summary-value {\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-weight-bold);\n  color: var(--dark-color);\n}\n\n.summary-value.excellent {\n  color: var(--success-color);\n}\n\n.summary-value.good {\n  color: var(--primary-color);\n}\n\n.summary-value.fair {\n  color: var(--warning-color);\n}\n\n.summary-value.poor {\n  color: var(--danger-color);\n}\n\n.metrics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n.metric-card {\n  background: var(--light-color);\n  border-radius: 8px;\n  padding: 1.5rem;\n  transition: transform 0.2s ease;\n}\n\n.metric-card:hover {\n  transform: translateY(-2px);\n}\n\n.metric-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.metric-header h4 {\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metric-badge {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-weight-medium);\n}\n\n.metric-badge.excellent {\n  background: rgba(16, 185, 129, 0.1);\n  color: rgb(16, 185, 129);\n}\n\n.metric-badge.good {\n  background: rgba(37, 99, 235, 0.1);\n  color: rgb(37, 99, 235);\n}\n\n.metric-badge.fair {\n  background: rgba(245, 158, 11, 0.1);\n  color: rgb(245, 158, 11);\n}\n\n.metric-badge.poor {\n  background: rgba(220, 38, 38, 0.1);\n  color: rgb(220, 38, 38);\n}\n\n.metric-details {\n  margin-bottom: 1.5rem;\n}\n\n.metric-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.metric-label {\n  color: var(--secondary-color);\n  font-size: var(--font-size-sm);\n}\n\n.metric-value {\n  font-weight: var(--font-weight-medium);\n  color: var(--dark-color);\n}\n\n.metric-progress {\n  margin-top: 1rem;\n}\n\n.progress-bar {\n  height: 6px;\n  background: var(--light-color);\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.progress-fill.excellent {\n  background: rgb(16, 185, 129);\n}\n\n.progress-fill.good {\n  background: rgb(37, 99, 235);\n}\n\n.progress-fill.fair {\n  background: rgb(245, 158, 11);\n}\n\n.progress-fill.poor {\n  background: rgb(220, 38, 38);\n}\n\n.progress-label {\n  font-size: var(--font-size-xs);\n  color: var(--secondary-color);\n}\n\n/* Loading state styles */\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  text-align: center;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(13, 148, 136, 0.2);\n  border-radius: 50%;\n  border-top-color: var(--primary-color);\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Empty state styles */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  background-color: var(--light-color);\n  border-radius: 8px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.reset-button {\n  margin-top: 1rem;\n  padding: 0.5rem 1.5rem;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: var(--font-weight-medium);\n  transition: background-color 0.2s ease;\n}\n\n.reset-button:hover {\n  background-color: var(--primary-hover);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}