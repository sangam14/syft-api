{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n\n    // Use the props.sbomData to generate package metrics\n    const packages = computed(() => {\n      if (!props.sbomData || !props.sbomData.components) {\n        return [];\n      }\n      return props.sbomData.components.map(component => ({\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(Math.random() * 10000000),\n        // Placeholder - replace with actual data\n        stars: Math.floor(Math.random() * 50000),\n        // Placeholder - replace with actual data\n        issues: Math.floor(Math.random() * 50),\n        // Placeholder - replace with actual data\n        lastUpdated: new Date().toISOString().split('T')[0],\n        // Placeholder - replace with actual data\n        maintenanceScore: Math.floor(Math.random() * 100) // Placeholder - replace with actual data\n      }));\n    });\n    const filteredPackages = computed(() => {\n      return packages.value.filter(pkg => pkg.name.toLowerCase().includes(searchQuery.value.toLowerCase())).sort((a, b) => {\n        switch (selectedMetric.value) {\n          case 'downloads':\n            return b.downloads - a.downloads;\n          case 'stars':\n            return b.stars - a.stars;\n          case 'issues':\n            return b.issues - a.issues;\n          case 'maintenance':\n            return b.maintenanceScore - a.maintenanceScore;\n          default:\n            return 0;\n        }\n      });\n    });\n    const formatNumber = num => {\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M';\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K';\n      }\n      return num.toString();\n    };\n    const formatDate = dateString => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    };\n    const getMaintenanceClass = score => {\n      if (score >= 90) return 'excellent';\n      if (score >= 75) return 'good';\n      if (score >= 60) return 'fair';\n      return 'poor';\n    };\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","name","props","sbomData","type","Object","required","setup","searchQuery","selectedMetric","packages","components","map","component","version","downloads","Math","floor","random","stars","issues","lastUpdated","Date","toISOString","split","maintenanceScore","filteredPackages","value","filter","pkg","toLowerCase","includes","sort","a","b","formatNumber","num","toFixed","toString","formatDate","dateString","date","toLocaleDateString","year","month","day","getMaintenanceClass","score"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/components/PackageMetrics.vue"],"sourcesContent":["<template>\n  <div class=\"package-metrics\">\n    <div class=\"metrics-header\">\n      <h3>Package Metrics</h3>\n      <div class=\"metrics-filters\">\n        <input\n          type=\"text\"\n          v-model=\"searchQuery\"\n          placeholder=\"Search packages...\"\n          class=\"modern-input\"\n        />\n        <select v-model=\"selectedMetric\" class=\"modern-input\">\n          <option value=\"downloads\">Downloads</option>\n          <option value=\"stars\">GitHub Stars</option>\n          <option value=\"issues\">Open Issues</option>\n          <option value=\"maintenance\">Maintenance Score</option>\n        </select>\n      </div>\n    </div>\n\n    <div class=\"metrics-grid\">\n      <div v-for=\"pkg in filteredPackages\" :key=\"pkg.name\" class=\"metric-card\">\n        <div class=\"metric-header\">\n          <h4>{{ pkg.name }}</h4>\n          <span class=\"metric-badge\" :class=\"getMaintenanceClass(pkg.maintenanceScore)\">\n            {{ pkg.maintenanceScore }}%\n          </span>\n        </div>\n        \n        <div class=\"metric-details\">\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Downloads</span>\n            <span class=\"metric-value\">{{ formatNumber(pkg.downloads) }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Stars</span>\n            <span class=\"metric-value\">{{ formatNumber(pkg.stars) }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Open Issues</span>\n            <span class=\"metric-value\">{{ pkg.issues }}</span>\n          </div>\n          <div class=\"metric-row\">\n            <span class=\"metric-label\">Last Updated</span>\n            <span class=\"metric-value\">{{ formatDate(pkg.lastUpdated) }}</span>\n          </div>\n        </div>\n\n        <div class=\"metric-progress\">\n          <div class=\"progress-bar\">\n            <div \n              class=\"progress-fill\" \n              :style=\"{ width: `${pkg.maintenanceScore}%` }\"\n              :class=\"getMaintenanceClass(pkg.maintenanceScore)\"\n            ></div>\n          </div>\n          <span class=\"progress-label\">Maintenance Score</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\n\nexport default {\n  name: 'PackageMetrics',\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const searchQuery = ref('');\n    const selectedMetric = ref('downloads');\n\n    // Use the props.sbomData to generate package metrics\n    const packages = computed(() => {\n      if (!props.sbomData || !props.sbomData.components) {\n        return [];\n      }\n\n      return props.sbomData.components.map(component => ({\n        name: component.name,\n        version: component.version,\n        downloads: Math.floor(Math.random() * 10000000), // Placeholder - replace with actual data\n        stars: Math.floor(Math.random() * 50000), // Placeholder - replace with actual data\n        issues: Math.floor(Math.random() * 50), // Placeholder - replace with actual data\n        lastUpdated: new Date().toISOString().split('T')[0], // Placeholder - replace with actual data\n        maintenanceScore: Math.floor(Math.random() * 100) // Placeholder - replace with actual data\n      }));\n    });\n\n    const filteredPackages = computed(() => {\n      return packages.value\n        .filter(pkg => \n          pkg.name.toLowerCase().includes(searchQuery.value.toLowerCase())\n        )\n        .sort((a, b) => {\n          switch (selectedMetric.value) {\n            case 'downloads':\n              return b.downloads - a.downloads;\n            case 'stars':\n              return b.stars - a.stars;\n            case 'issues':\n              return b.issues - a.issues;\n            case 'maintenance':\n              return b.maintenanceScore - a.maintenanceScore;\n            default:\n              return 0;\n          }\n        });\n    });\n\n    const formatNumber = (num) => {\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M';\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K';\n      }\n      return num.toString();\n    };\n\n    const formatDate = (dateString) => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', { \n        year: 'numeric', \n        month: 'short', \n        day: 'numeric' \n      });\n    };\n\n    const getMaintenanceClass = (score) => {\n      if (score >= 90) return 'excellent';\n      if (score >= 75) return 'good';\n      if (score >= 60) return 'fair';\n      return 'poor';\n    };\n\n    return {\n      searchQuery,\n      selectedMetric,\n      filteredPackages,\n      formatNumber,\n      formatDate,\n      getMaintenanceClass\n    };\n  }\n};\n</script>\n\n<style scoped>\n.package-metrics {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: var(--card-shadow);\n}\n\n.metrics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.metrics-header h3 {\n  font-size: var(--font-size-xl);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metrics-filters {\n  display: flex;\n  gap: 1rem;\n}\n\n.metrics-filters input {\n  width: 200px;\n}\n\n.metrics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n.metric-card {\n  background: var(--light-color);\n  border-radius: 8px;\n  padding: 1.5rem;\n  transition: transform 0.2s ease;\n}\n\n.metric-card:hover {\n  transform: translateY(-2px);\n}\n\n.metric-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.metric-header h4 {\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-weight-semibold);\n  color: var(--dark-color);\n}\n\n.metric-badge {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-weight-medium);\n}\n\n.metric-badge.excellent {\n  background: rgba(16, 185, 129, 0.1);\n  color: rgb(16, 185, 129);\n}\n\n.metric-badge.good {\n  background: rgba(37, 99, 235, 0.1);\n  color: rgb(37, 99, 235);\n}\n\n.metric-badge.fair {\n  background: rgba(245, 158, 11, 0.1);\n  color: rgb(245, 158, 11);\n}\n\n.metric-badge.poor {\n  background: rgba(220, 38, 38, 0.1);\n  color: rgb(220, 38, 38);\n}\n\n.metric-details {\n  margin-bottom: 1.5rem;\n}\n\n.metric-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.metric-label {\n  color: var(--secondary-color);\n  font-size: var(--font-size-sm);\n}\n\n.metric-value {\n  font-weight: var(--font-weight-medium);\n  color: var(--dark-color);\n}\n\n.metric-progress {\n  margin-top: 1rem;\n}\n\n.progress-bar {\n  height: 6px;\n  background: var(--light-color);\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.progress-fill.excellent {\n  background: rgb(16, 185, 129);\n}\n\n.progress-fill.good {\n  background: rgb(37, 99, 235);\n}\n\n.progress-fill.fair {\n  background: rgb(245, 158, 11);\n}\n\n.progress-fill.poor {\n  background: rgb(220, 38, 38);\n}\n\n.progress-label {\n  font-size: var(--font-size-xs);\n  color: var(--secondary-color);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}