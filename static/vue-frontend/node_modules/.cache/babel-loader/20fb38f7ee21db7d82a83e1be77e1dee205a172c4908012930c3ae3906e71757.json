{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport VulnerabilityTrend from './VulnerabilityTrend.vue';\nimport PackageMetrics from './PackageMetrics.vue';\nimport DependencyGraph from './DependencyGraph.vue';\nimport LicenseCompliance from './LicenseCompliance.vue';\nexport default {\n  name: 'AnalyticsView',\n  components: {\n    VulnerabilityTrend,\n    PackageMetrics,\n    DependencyGraph,\n    LicenseCompliance\n  },\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const isLoading = ref(false);\n    const errorMessage = ref(null);\n    const selectedTimeRange = ref('30');\n\n    // Parse sbomData if it's a string\n    const parsedSbomData = computed(() => {\n      try {\n        if (!props.sbomData) return null;\n\n        // If it's a string, try to parse it\n        if (typeof props.sbomData === 'string') {\n          return JSON.parse(props.sbomData);\n        }\n\n        // If it's already an object, return it\n        return props.sbomData;\n      } catch (error) {\n        console.error('Error parsing SBOM data in AnalyticsView:', error);\n        return null;\n      }\n    });\n\n    // Computed property to check if we have data\n    const hasData = computed(() => {\n      const data = parsedSbomData.value;\n      return data && Array.isArray(data.components) && data.components.length > 0;\n    });\n\n    // More strict validation for components that need complete data\n    const hasValidData = computed(() => {\n      // Use the parsed data\n      const data = parsedSbomData.value;\n\n      // Check if data exists and has components array\n      if (!data || !Array.isArray(data.components)) {\n        return false;\n      }\n\n      // Check if components array has at least one item\n      if (data.components.length === 0) {\n        return false;\n      }\n\n      // Check if the first component has the expected properties\n      const firstComponent = data.components[0];\n      return firstComponent && typeof firstComponent === 'object';\n    });\n\n    // Key metrics\n    const totalPackages = computed(() => {\n      if (!hasData.value) return 0;\n      return props.sbomData.components.length;\n    });\n\n    // Generate random trend data (replace with actual data in production)\n    const generateTrendData = (min, max) => {\n      const value = Math.floor(Math.random() * (max - min + 1)) + min;\n      return {\n        value,\n        direction: Math.random() > 0.5 ? 'up' : 'down'\n      };\n    };\n\n    // Trend data for metrics\n    const packagesTrend = ref(generateTrendData(1, 15));\n    const vulnerabilitiesTrend = ref(generateTrendData(5, 20));\n    const licensesTrend = ref(generateTrendData(1, 10));\n    const healthTrend = ref(generateTrendData(1, 8));\n\n    // Vulnerability metrics\n    const totalVulnerabilities = computed(() => {\n      if (!hasData.value) return 0;\n\n      // In a real implementation, you would calculate this from actual vulnerability data\n      // For now, we'll generate a random number based on the number of components\n      return Math.floor(totalPackages.value * 0.3);\n    });\n\n    // Vulnerability severity breakdown\n    const vulnerabilitySeverity = computed(() => {\n      if (!hasData.value) return [];\n\n      // In a real implementation, you would calculate this from actual vulnerability data\n      const total = totalVulnerabilities.value;\n      return [{\n        name: 'Critical',\n        count: Math.floor(total * 0.15),\n        percentage: 15,\n        color: '#DC2626' // Red\n      }, {\n        name: 'High',\n        count: Math.floor(total * 0.25),\n        percentage: 25,\n        color: '#F97316' // Orange\n      }, {\n        name: 'Medium',\n        count: Math.floor(total * 0.35),\n        percentage: 35,\n        color: '#F59E0B' // Amber\n      }, {\n        name: 'Low',\n        count: Math.floor(total * 0.25),\n        percentage: 25,\n        color: '#10B981' // Green\n      }];\n    });\n\n    // License metrics\n    const uniqueLicenses = computed(() => {\n      if (!hasData.value) return 0;\n\n      // In a real implementation, you would calculate this from actual license data\n      // For now, we'll generate a random number based on the number of components\n      return Math.floor(totalPackages.value * 0.2);\n    });\n\n    // Health score\n    const healthScore = computed(() => {\n      if (!hasData.value) return 0;\n\n      // In a real implementation, you would calculate this based on various factors\n      // For now, we'll generate a random score between 60 and 95\n      return Math.floor(Math.random() * 35) + 60;\n    });\n\n    // Recommendations\n    const recommendations = ref([{\n      icon: '⚠️',\n      priority: 'high',\n      title: 'Update 3 Critical Packages',\n      description: 'Three packages have critical vulnerabilities that should be addressed immediately.'\n    }, {\n      icon: '📜',\n      priority: 'medium',\n      title: 'License Compliance Issues',\n      description: 'Two packages have licenses that may conflict with your project\\'s license.'\n    }, {\n      icon: '🔄',\n      priority: 'medium',\n      title: 'Outdated Dependencies',\n      description: '8 packages are significantly outdated and should be updated.'\n    }, {\n      icon: '📦',\n      priority: 'low',\n      title: 'Duplicate Dependencies',\n      description: 'Your project contains 3 duplicate dependencies that could be consolidated.'\n    }]);\n\n    // Methods\n    function refreshData() {\n      isLoading.value = true;\n      errorMessage.value = null;\n\n      // Simulate API call\n      setTimeout(() => {\n        // Regenerate trend data\n        packagesTrend.value = generateTrendData(1, 15);\n        vulnerabilitiesTrend.value = generateTrendData(5, 20);\n        licensesTrend.value = generateTrendData(1, 10);\n        healthTrend.value = generateTrendData(1, 8);\n        isLoading.value = false;\n      }, 1000);\n    }\n    function navigateToGenerate() {\n      // Emit an event that the parent component can listen for\n      emit('navigate', 'generate');\n\n      // Or use direct DOM manipulation to scroll to the generate section\n      const generateSection = document.getElementById('generate');\n      if (generateSection) {\n        generateSection.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n    function exportVulnerabilityData() {\n      // In a real implementation, this would export the data to CSV or JSON\n      alert('Exporting vulnerability data...');\n    }\n\n    // Initialize data\n    onMounted(() => {\n      refreshData();\n    });\n    return {\n      isLoading,\n      errorMessage,\n      selectedTimeRange,\n      hasData,\n      hasValidData,\n      totalPackages,\n      totalVulnerabilities,\n      uniqueLicenses,\n      healthScore,\n      packagesTrend,\n      vulnerabilitiesTrend,\n      licensesTrend,\n      healthTrend,\n      vulnerabilitySeverity,\n      recommendations,\n      refreshData,\n      navigateToGenerate,\n      exportVulnerabilityData\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","VulnerabilityTrend","PackageMetrics","DependencyGraph","LicenseCompliance","name","components","props","sbomData","type","Object","required","setup","emit","isLoading","errorMessage","selectedTimeRange","parsedSbomData","JSON","parse","error","console","hasData","data","value","Array","isArray","length","hasValidData","firstComponent","totalPackages","generateTrendData","min","max","Math","floor","random","direction","packagesTrend","vulnerabilitiesTrend","licensesTrend","healthTrend","totalVulnerabilities","vulnerabilitySeverity","total","count","percentage","color","uniqueLicenses","healthScore","recommendations","icon","priority","title","description","refreshData","setTimeout","navigateToGenerate","generateSection","document","getElementById","scrollIntoView","behavior","exportVulnerabilityData","alert"],"sources":["/Users/sangambiradar/Documents/syft-api/static/vue-frontend/src/components/AnalyticsView.vue"],"sourcesContent":["<template>\n  <div class=\"analytics-view\">\n    <div class=\"analytics-header\">\n      <div class=\"header-content\">\n        <h2>SBOM Analytics Dashboard</h2>\n        <p class=\"description\">Comprehensive analysis and insights for your Software Bill of Materials</p>\n      </div>\n      <div class=\"header-actions\">\n        <div class=\"time-range-selector\">\n          <label for=\"timeRange\">Time Range:</label>\n          <select id=\"timeRange\" v-model=\"selectedTimeRange\" class=\"modern-input\">\n            <option value=\"7\">Last 7 Days</option>\n            <option value=\"30\">Last 30 Days</option>\n            <option value=\"90\">Last 90 Days</option>\n            <option value=\"365\">Last Year</option>\n            <option value=\"all\">All Time</option>\n          </select>\n        </div>\n        <button @click=\"refreshData\" class=\"refresh-button\">\n          <span class=\"refresh-icon\">🔄</span>\n          Refresh Data\n        </button>\n      </div>\n    </div>\n\n    <!-- Debug Info (remove in production) -->\n    <div v-if=\"true\" class=\"debug-info\">\n      <h4>Debug Information</h4>\n      <p>Has Data: {{ hasData }}</p>\n      <p>Has Valid Data: {{ hasValidData }}</p>\n      <p>Raw SBOM Data Type: {{ props.sbomData ? typeof props.sbomData : 'undefined' }}</p>\n      <p>Parsed SBOM Data: {{ parsedSbomData ? 'Available' : 'Not Available' }}</p>\n      <p>Components: {{ parsedSbomData?.components?.length || 0 }}</p>\n      <p>First Component: {{ parsedSbomData?.components?.[0] ? JSON.stringify(parsedSbomData.components[0]).substring(0, 100) + '...' : 'None' }}</p>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"isLoading\" class=\"loading-container\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading analytics data...</p>\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"errorMessage\" class=\"error-container\">\n      <div class=\"error-icon\">⚠️</div>\n      <h3>Error Loading Data</h3>\n      <p>{{ errorMessage }}</p>\n      <button @click=\"refreshData\" class=\"retry-button\">Try Again</button>\n    </div>\n\n    <!-- Empty State -->\n    <div v-else-if=\"!hasData\" class=\"empty-state\">\n      <div class=\"empty-icon\">📊</div>\n      <h3>No Analytics Data Available</h3>\n      <p>Generate an SBOM first to view analytics insights</p>\n      <button @click=\"navigateToGenerate\" class=\"primary-button\">Generate SBOM</button>\n    </div>\n\n    <!-- Analytics Dashboard -->\n    <div v-else class=\"analytics-dashboard\">\n      <!-- Key Metrics Summary -->\n      <div class=\"metrics-summary\">\n        <div class=\"metric-card total-packages\">\n          <div class=\"metric-icon\">📦</div>\n          <div class=\"metric-content\">\n            <div class=\"metric-value\">{{ totalPackages }}</div>\n            <div class=\"metric-label\">Total Packages</div>\n          </div>\n          <div class=\"metric-trend\" :class=\"packagesTrend.direction\">\n            {{ packagesTrend.value }}% {{ packagesTrend.direction === 'up' ? '↑' : '↓' }}\n          </div>\n        </div>\n\n        <div class=\"metric-card vulnerabilities\">\n          <div class=\"metric-icon\">🛡️</div>\n          <div class=\"metric-content\">\n            <div class=\"metric-value\">{{ totalVulnerabilities }}</div>\n            <div class=\"metric-label\">Vulnerabilities</div>\n          </div>\n          <div class=\"metric-trend\" :class=\"vulnerabilitiesTrend.direction\">\n            {{ vulnerabilitiesTrend.value }}% {{ vulnerabilitiesTrend.direction === 'up' ? '↑' : '↓' }}\n          </div>\n        </div>\n\n        <div class=\"metric-card licenses\">\n          <div class=\"metric-icon\">📜</div>\n          <div class=\"metric-content\">\n            <div class=\"metric-value\">{{ uniqueLicenses }}</div>\n            <div class=\"metric-label\">Unique Licenses</div>\n          </div>\n          <div class=\"metric-trend\" :class=\"licensesTrend.direction\">\n            {{ licensesTrend.value }}% {{ licensesTrend.direction === 'up' ? '↑' : '↓' }}\n          </div>\n        </div>\n\n        <div class=\"metric-card health-score\">\n          <div class=\"metric-icon\">🏆</div>\n          <div class=\"metric-content\">\n            <div class=\"metric-value\">{{ healthScore }}<span class=\"percentage\">%</span></div>\n            <div class=\"metric-label\">Health Score</div>\n          </div>\n          <div class=\"metric-trend\" :class=\"healthTrend.direction\">\n            {{ healthTrend.value }}% {{ healthTrend.direction === 'up' ? '↑' : '↓' }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Main Analytics Content -->\n      <div class=\"analytics-content\">\n        <!-- Left Column -->\n        <div class=\"analytics-column\">\n          <!-- Vulnerability Breakdown -->\n          <div class=\"analytics-card vulnerability-breakdown\">\n            <div class=\"card-header\">\n              <h3>Vulnerability Severity Breakdown</h3>\n              <div class=\"card-actions\">\n                <button @click=\"exportVulnerabilityData\" class=\"action-button\">\n                  Export\n                </button>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"severity-chart\">\n                <div v-for=\"(severity, index) in vulnerabilitySeverity\" :key=\"index\"\n                     class=\"severity-bar\"\n                     :style=\"{ width: severity.percentage + '%', backgroundColor: severity.color }\">\n                  <span class=\"severity-label\">{{ severity.name }}</span>\n                  <span class=\"severity-count\">{{ severity.count }}</span>\n                </div>\n              </div>\n              <div class=\"severity-legend\">\n                <div v-for=\"(severity, index) in vulnerabilitySeverity\" :key=\"'legend-'+index\" class=\"legend-item\">\n                  <span class=\"legend-color\" :style=\"{ backgroundColor: severity.color }\"></span>\n                  <span class=\"legend-label\">{{ severity.name }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Vulnerability Trend -->\n          <vulnerability-trend v-if=\"hasValidData\" :sbom-data=\"parsedSbomData\" />\n          <div v-else class=\"component-loading\">\n            <div class=\"loading-spinner\"></div>\n            <p>Loading vulnerability trend data...</p>\n          </div>\n        </div>\n\n        <!-- Right Column -->\n        <div class=\"analytics-column\">\n          <!-- License Compliance -->\n          <license-compliance v-if=\"hasValidData\" :sbom-data=\"sbomData\" />\n          <div v-else class=\"component-loading\">\n            <div class=\"loading-spinner\"></div>\n            <p>Loading license compliance data...</p>\n          </div>\n\n          <!-- Dependency Graph -->\n          <dependency-graph v-if=\"hasValidData\" :sbom-data=\"sbomData\" />\n          <div v-else class=\"component-loading\">\n            <div class=\"loading-spinner\"></div>\n            <p>Loading dependency graph data...</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Package Metrics Section -->\n      <div class=\"package-metrics-section\">\n        <div class=\"section-header\">\n          <h3>Package Metrics</h3>\n          <p class=\"section-description\">Analyze popularity and maintenance metrics for packages in your SBOM</p>\n        </div>\n        <!-- Only render PackageMetrics if we have valid data -->\n        <package-metrics v-if=\"hasValidData\" :sbom-data=\"sbomData\" />\n        <!-- Show loading state if we don't have data yet -->\n        <div v-else class=\"component-loading\">\n          <div class=\"loading-spinner\"></div>\n          <p>Loading package metrics...</p>\n        </div>\n      </div>\n\n      <!-- Recommendations Section -->\n      <div class=\"recommendations-section\">\n        <div class=\"section-header\">\n          <h3>Recommendations</h3>\n          <p class=\"section-description\">Actionable insights to improve your SBOM health</p>\n        </div>\n        <div class=\"recommendations-grid\">\n          <div v-for=\"(recommendation, index) in recommendations\" :key=\"index\" class=\"recommendation-card\">\n            <div class=\"recommendation-header\" :class=\"recommendation.priority\">\n              <div class=\"recommendation-icon\">{{ recommendation.icon }}</div>\n              <div class=\"recommendation-priority\">{{ recommendation.priority }}</div>\n            </div>\n            <div class=\"recommendation-content\">\n              <h4>{{ recommendation.title }}</h4>\n              <p>{{ recommendation.description }}</p>\n            </div>\n            <div class=\"recommendation-actions\">\n              <button class=\"action-button\">Implement</button>\n              <button class=\"action-button secondary\">Dismiss</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\nimport VulnerabilityTrend from './VulnerabilityTrend.vue';\nimport PackageMetrics from './PackageMetrics.vue';\nimport DependencyGraph from './DependencyGraph.vue';\nimport LicenseCompliance from './LicenseCompliance.vue';\n\nexport default {\n  name: 'AnalyticsView',\n  components: {\n    VulnerabilityTrend,\n    PackageMetrics,\n    DependencyGraph,\n    LicenseCompliance\n  },\n  props: {\n    sbomData: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props, { emit }) {\n    const isLoading = ref(false);\n    const errorMessage = ref(null);\n    const selectedTimeRange = ref('30');\n\n    // Parse sbomData if it's a string\n    const parsedSbomData = computed(() => {\n      try {\n        if (!props.sbomData) return null;\n\n        // If it's a string, try to parse it\n        if (typeof props.sbomData === 'string') {\n          return JSON.parse(props.sbomData);\n        }\n\n        // If it's already an object, return it\n        return props.sbomData;\n      } catch (error) {\n        console.error('Error parsing SBOM data in AnalyticsView:', error);\n        return null;\n      }\n    });\n\n    // Computed property to check if we have data\n    const hasData = computed(() => {\n      const data = parsedSbomData.value;\n      return data && Array.isArray(data.components) && data.components.length > 0;\n    });\n\n    // More strict validation for components that need complete data\n    const hasValidData = computed(() => {\n      // Use the parsed data\n      const data = parsedSbomData.value;\n\n      // Check if data exists and has components array\n      if (!data || !Array.isArray(data.components)) {\n        return false;\n      }\n\n      // Check if components array has at least one item\n      if (data.components.length === 0) {\n        return false;\n      }\n\n      // Check if the first component has the expected properties\n      const firstComponent = data.components[0];\n      return firstComponent && typeof firstComponent === 'object';\n    });\n\n    // Key metrics\n    const totalPackages = computed(() => {\n      if (!hasData.value) return 0;\n      return props.sbomData.components.length;\n    });\n\n    // Generate random trend data (replace with actual data in production)\n    const generateTrendData = (min, max) => {\n      const value = Math.floor(Math.random() * (max - min + 1)) + min;\n      return {\n        value,\n        direction: Math.random() > 0.5 ? 'up' : 'down'\n      };\n    };\n\n    // Trend data for metrics\n    const packagesTrend = ref(generateTrendData(1, 15));\n    const vulnerabilitiesTrend = ref(generateTrendData(5, 20));\n    const licensesTrend = ref(generateTrendData(1, 10));\n    const healthTrend = ref(generateTrendData(1, 8));\n\n    // Vulnerability metrics\n    const totalVulnerabilities = computed(() => {\n      if (!hasData.value) return 0;\n\n      // In a real implementation, you would calculate this from actual vulnerability data\n      // For now, we'll generate a random number based on the number of components\n      return Math.floor(totalPackages.value * 0.3);\n    });\n\n    // Vulnerability severity breakdown\n    const vulnerabilitySeverity = computed(() => {\n      if (!hasData.value) return [];\n\n      // In a real implementation, you would calculate this from actual vulnerability data\n      const total = totalVulnerabilities.value;\n\n      return [\n        {\n          name: 'Critical',\n          count: Math.floor(total * 0.15),\n          percentage: 15,\n          color: '#DC2626' // Red\n        },\n        {\n          name: 'High',\n          count: Math.floor(total * 0.25),\n          percentage: 25,\n          color: '#F97316' // Orange\n        },\n        {\n          name: 'Medium',\n          count: Math.floor(total * 0.35),\n          percentage: 35,\n          color: '#F59E0B' // Amber\n        },\n        {\n          name: 'Low',\n          count: Math.floor(total * 0.25),\n          percentage: 25,\n          color: '#10B981' // Green\n        }\n      ];\n    });\n\n    // License metrics\n    const uniqueLicenses = computed(() => {\n      if (!hasData.value) return 0;\n\n      // In a real implementation, you would calculate this from actual license data\n      // For now, we'll generate a random number based on the number of components\n      return Math.floor(totalPackages.value * 0.2);\n    });\n\n    // Health score\n    const healthScore = computed(() => {\n      if (!hasData.value) return 0;\n\n      // In a real implementation, you would calculate this based on various factors\n      // For now, we'll generate a random score between 60 and 95\n      return Math.floor(Math.random() * 35) + 60;\n    });\n\n    // Recommendations\n    const recommendations = ref([\n      {\n        icon: '⚠️',\n        priority: 'high',\n        title: 'Update 3 Critical Packages',\n        description: 'Three packages have critical vulnerabilities that should be addressed immediately.'\n      },\n      {\n        icon: '📜',\n        priority: 'medium',\n        title: 'License Compliance Issues',\n        description: 'Two packages have licenses that may conflict with your project\\'s license.'\n      },\n      {\n        icon: '🔄',\n        priority: 'medium',\n        title: 'Outdated Dependencies',\n        description: '8 packages are significantly outdated and should be updated.'\n      },\n      {\n        icon: '📦',\n        priority: 'low',\n        title: 'Duplicate Dependencies',\n        description: 'Your project contains 3 duplicate dependencies that could be consolidated.'\n      }\n    ]);\n\n    // Methods\n    function refreshData() {\n      isLoading.value = true;\n      errorMessage.value = null;\n\n      // Simulate API call\n      setTimeout(() => {\n        // Regenerate trend data\n        packagesTrend.value = generateTrendData(1, 15);\n        vulnerabilitiesTrend.value = generateTrendData(5, 20);\n        licensesTrend.value = generateTrendData(1, 10);\n        healthTrend.value = generateTrendData(1, 8);\n\n        isLoading.value = false;\n      }, 1000);\n    }\n\n    function navigateToGenerate() {\n      // Emit an event that the parent component can listen for\n      emit('navigate', 'generate');\n\n      // Or use direct DOM manipulation to scroll to the generate section\n      const generateSection = document.getElementById('generate');\n      if (generateSection) {\n        generateSection.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n\n    function exportVulnerabilityData() {\n      // In a real implementation, this would export the data to CSV or JSON\n      alert('Exporting vulnerability data...');\n    }\n\n    // Initialize data\n    onMounted(() => {\n      refreshData();\n    });\n\n    return {\n      isLoading,\n      errorMessage,\n      selectedTimeRange,\n      hasData,\n      hasValidData,\n      totalPackages,\n      totalVulnerabilities,\n      uniqueLicenses,\n      healthScore,\n      packagesTrend,\n      vulnerabilitiesTrend,\n      licensesTrend,\n      healthTrend,\n      vulnerabilitySeverity,\n      recommendations,\n      refreshData,\n      navigateToGenerate,\n      exportVulnerabilityData\n    };\n  }\n};\n</script>\n\n<style scoped>\n.analytics-view {\n  width: 100%;\n}\n\n.debug-info {\n  margin-bottom: 1rem;\n  padding: 1rem;\n  background-color: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.5rem;\n  font-size: 0.875rem;\n}\n\n.debug-info h4 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  color: #0f766e;\n}\n\n.debug-info p {\n  margin: 0.25rem 0;\n  font-family: monospace;\n}\n\n.analytics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.header-content h2 {\n  font-size: 1.75rem;\n  font-weight: 600;\n  color: var(--dark-color);\n  margin-bottom: 0.5rem;\n}\n\n.description {\n  color: var(--secondary-color);\n  font-size: 1rem;\n}\n\n.header-actions {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n.time-range-selector {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.time-range-selector label {\n  font-size: 0.875rem;\n  color: var(--secondary-color);\n}\n\n.refresh-button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background-color: var(--light-color);\n  border: 1px solid var(--border-color);\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: var(--dark-color);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.refresh-button:hover {\n  background-color: var(--primary-color);\n  color: white;\n  border-color: var(--primary-color);\n}\n\n.refresh-icon {\n  font-size: 1rem;\n}\n\n/* Loading State */\n.loading-container, .component-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 2rem;\n  background-color: var(--light-color);\n  border-radius: 0.5rem;\n  text-align: center;\n}\n\n.component-loading {\n  padding: 2rem;\n  min-height: 200px;\n}\n\n.loading-spinner {\n  width: 3rem;\n  height: 3rem;\n  border: 0.25rem solid rgba(13, 148, 136, 0.2);\n  border-radius: 50%;\n  border-top-color: var(--primary-color);\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Error State */\n.error-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 2rem;\n  background-color: rgba(220, 38, 38, 0.05);\n  border-radius: 0.5rem;\n  text-align: center;\n}\n\n.error-icon {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n}\n\n.retry-button {\n  margin-top: 1.5rem;\n  padding: 0.75rem 1.5rem;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.retry-button:hover {\n  background-color: var(--primary-hover);\n}\n\n/* Empty State */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 2rem;\n  background-color: var(--light-color);\n  border-radius: 0.5rem;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.primary-button {\n  margin-top: 1.5rem;\n  padding: 0.75rem 1.5rem;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.primary-button:hover {\n  background-color: var(--primary-hover);\n}\n\n/* Analytics Dashboard */\n.analytics-dashboard {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n/* Metrics Summary */\n.metrics-summary {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 1rem;\n}\n\n.metric-card {\n  display: flex;\n  align-items: center;\n  padding: 1.5rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.metric-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.metric-icon {\n  font-size: 2rem;\n  margin-right: 1rem;\n}\n\n.metric-content {\n  flex: 1;\n}\n\n.metric-value {\n  font-size: 1.75rem;\n  font-weight: 700;\n  color: var(--dark-color);\n  line-height: 1.2;\n}\n\n.percentage {\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--secondary-color);\n}\n\n.metric-label {\n  font-size: 0.875rem;\n  color: var(--secondary-color);\n}\n\n.metric-trend {\n  font-size: 0.875rem;\n  font-weight: 500;\n  padding: 0.25rem 0.5rem;\n  border-radius: 9999px;\n}\n\n.metric-trend.up {\n  background-color: rgba(16, 185, 129, 0.1);\n  color: rgb(16, 185, 129);\n}\n\n.metric-trend.down {\n  background-color: rgba(220, 38, 38, 0.1);\n  color: rgb(220, 38, 38);\n}\n\n/* Analytics Content */\n.analytics-content {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  gap: 1.5rem;\n}\n\n.analytics-column {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.analytics-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.25rem 1.5rem;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.card-header h3 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: var(--dark-color);\n  margin: 0;\n}\n\n.card-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.action-button {\n  padding: 0.375rem 0.75rem;\n  background-color: var(--light-color);\n  border: 1px solid var(--border-color);\n  border-radius: 0.375rem;\n  font-size: 0.75rem;\n  font-weight: 500;\n  color: var(--dark-color);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.action-button:hover {\n  background-color: var(--primary-color);\n  color: white;\n  border-color: var(--primary-color);\n}\n\n.action-button.secondary:hover {\n  background-color: var(--secondary-color);\n  border-color: var(--secondary-color);\n}\n\n.card-body {\n  padding: 1.5rem;\n}\n\n/* Vulnerability Breakdown */\n.severity-chart {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.severity-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  color: white;\n  font-size: 0.875rem;\n  font-weight: 500;\n  min-width: 30px;\n  transition: width 0.5s ease;\n}\n\n.severity-legend {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  font-size: 0.75rem;\n  color: var(--secondary-color);\n}\n\n.legend-color {\n  width: 12px;\n  height: 12px;\n  border-radius: 2px;\n  margin-right: 0.5rem;\n}\n\n/* Package Metrics Section */\n.package-metrics-section {\n  margin-top: 1rem;\n}\n\n.section-header {\n  margin-bottom: 1rem;\n}\n\n.section-header h3 {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--dark-color);\n  margin-bottom: 0.5rem;\n}\n\n.section-description {\n  font-size: 0.875rem;\n  color: var(--secondary-color);\n}\n\n/* Recommendations Section */\n.recommendations-section {\n  margin-top: 2rem;\n}\n\n.recommendations-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n.recommendation-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.recommendation-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.recommendation-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.recommendation-header.high {\n  background-color: rgba(220, 38, 38, 0.1);\n}\n\n.recommendation-header.medium {\n  background-color: rgba(245, 158, 11, 0.1);\n}\n\n.recommendation-header.low {\n  background-color: rgba(16, 185, 129, 0.1);\n}\n\n.recommendation-icon {\n  font-size: 1.25rem;\n}\n\n.recommendation-priority {\n  font-size: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  padding: 0.25rem 0.5rem;\n  border-radius: 9999px;\n  background-color: white;\n}\n\n.recommendation-header.high .recommendation-priority {\n  color: rgb(220, 38, 38);\n}\n\n.recommendation-header.medium .recommendation-priority {\n  color: rgb(245, 158, 11);\n}\n\n.recommendation-header.low .recommendation-priority {\n  color: rgb(16, 185, 129);\n}\n\n.recommendation-content {\n  padding: 1.5rem;\n}\n\n.recommendation-content h4 {\n  font-size: 1rem;\n  font-weight: 600;\n  color: var(--dark-color);\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n}\n\n.recommendation-content p {\n  font-size: 0.875rem;\n  color: var(--secondary-color);\n  margin: 0;\n}\n\n.recommendation-actions {\n  display: flex;\n  gap: 0.5rem;\n  padding: 0 1.5rem 1.5rem;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .analytics-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .header-actions {\n    width: 100%;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .time-range-selector {\n    width: 100%;\n  }\n\n  .time-range-selector select {\n    width: 100%;\n  }\n\n  .refresh-button {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .analytics-content {\n    grid-template-columns: 1fr;\n  }\n\n  .metrics-summary {\n    grid-template-columns: 1fr;\n  }\n\n  .recommendations-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n@media (min-width: 769px) and (max-width: 1200px) {\n  .analytics-content {\n    grid-template-columns: 1fr;\n  }\n}\n\n@media (min-width: 1201px) {\n  .analytics-view {\n    max-width: 1400px;\n    margin: 0 auto;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}